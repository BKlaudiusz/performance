/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 30.0, "minX": 0.0, "maxY": 7882.0, "series": [{"data": [[0.0, 997.0], [0.1, 997.0], [0.2, 1808.0], [0.3, 1808.0], [0.4, 2430.0], [0.5, 3017.0], [0.6, 3017.0], [0.7, 3558.0], [0.8, 3558.0], [0.9, 4132.0], [1.0, 4832.0], [1.1, 4832.0], [1.2, 5307.0], [1.3, 5307.0], [1.4, 5309.0], [1.5, 5321.0], [1.6, 5321.0], [1.7, 5330.0], [1.8, 5330.0], [1.9, 5333.0], [2.0, 5334.0], [2.1, 5334.0], [2.2, 5337.0], [2.3, 5337.0], [2.4, 5351.0], [2.5, 5356.0], [2.6, 5356.0], [2.7, 5361.0], [2.8, 5361.0], [2.9, 5363.0], [3.0, 5366.0], [3.1, 5366.0], [3.2, 5366.0], [3.3, 5366.0], [3.4, 5383.0], [3.5, 5387.0], [3.6, 5387.0], [3.7, 5393.0], [3.8, 5393.0], [3.9, 5398.0], [4.0, 5403.0], [4.1, 5403.0], [4.2, 5478.0], [4.3, 5478.0], [4.4, 5483.0], [4.5, 5490.0], [4.6, 5490.0], [4.7, 5493.0], [4.8, 5493.0], [4.9, 5505.0], [5.0, 5508.0], [5.1, 5508.0], [5.2, 5511.0], [5.3, 5511.0], [5.4, 5513.0], [5.5, 5513.0], [5.6, 5518.0], [5.7, 5522.0], [5.8, 5522.0], [5.9, 5524.0], [6.0, 5524.0], [6.1, 5527.0], [6.2, 5529.0], [6.3, 5529.0], [6.4, 5532.0], [6.5, 5532.0], [6.6, 5557.0], [6.7, 5561.0], [6.8, 5561.0], [6.9, 5566.0], [7.0, 5566.0], [7.1, 5574.0], [7.2, 5575.0], [7.3, 5575.0], [7.4, 5593.0], [7.5, 5593.0], [7.6, 5595.0], [7.7, 5595.0], [7.8, 5595.0], [7.9, 5603.0], [8.0, 5603.0], [8.1, 5605.0], [8.2, 5607.0], [8.3, 5607.0], [8.4, 5609.0], [8.5, 5609.0], [8.6, 5625.0], [8.7, 5633.0], [8.8, 5633.0], [8.9, 5635.0], [9.0, 5637.0], [9.1, 5637.0], [9.2, 5639.0], [9.3, 5639.0], [9.4, 5647.0], [9.5, 5652.0], [9.6, 5652.0], [9.7, 5665.0], [9.8, 5665.0], [9.9, 5667.0], [10.0, 5668.0], [10.1, 5668.0], [10.2, 5672.0], [10.3, 5672.0], [10.4, 5679.0], [10.5, 5689.0], [10.6, 5689.0], [10.7, 5691.0], [10.8, 5691.0], [10.9, 5694.0], [11.0, 5698.0], [11.1, 5698.0], [11.2, 5712.0], [11.3, 5712.0], [11.4, 5718.0], [11.5, 5721.0], [11.6, 5721.0], [11.7, 5723.0], [11.8, 5723.0], [11.9, 5724.0], [12.0, 5727.0], [12.1, 5727.0], [12.2, 5730.0], [12.3, 5730.0], [12.4, 5731.0], [12.5, 5734.0], [12.6, 5734.0], [12.7, 5737.0], [12.8, 5737.0], [12.9, 5757.0], [13.0, 5760.0], [13.1, 5760.0], [13.2, 5763.0], [13.3, 5763.0], [13.4, 5766.0], [13.5, 5768.0], [13.6, 5768.0], [13.7, 5770.0], [13.8, 5770.0], [13.9, 5773.0], [14.0, 5776.0], [14.1, 5776.0], [14.2, 5796.0], [14.3, 5796.0], [14.4, 5798.0], [14.5, 5798.0], [14.6, 5798.0], [14.7, 5798.0], [14.8, 5798.0], [14.9, 5799.0], [15.0, 5944.0], [15.1, 5944.0], [15.2, 5947.0], [15.3, 5947.0], [15.4, 5947.0], [15.5, 5947.0], [15.6, 5947.0], [15.7, 5949.0], [15.8, 5949.0], [15.9, 5950.0], [16.0, 5967.0], [16.1, 5967.0], [16.2, 5970.0], [16.3, 5970.0], [16.4, 5971.0], [16.5, 5973.0], [16.6, 5973.0], [16.7, 5973.0], [16.8, 5973.0], [16.9, 5975.0], [17.0, 5978.0], [17.1, 5978.0], [17.2, 5981.0], [17.3, 5981.0], [17.4, 5983.0], [17.5, 5986.0], [17.6, 5986.0], [17.7, 5988.0], [17.8, 5988.0], [17.9, 6000.0], [18.0, 6016.0], [18.1, 6016.0], [18.2, 6018.0], [18.3, 6018.0], [18.4, 6018.0], [18.5, 6020.0], [18.6, 6020.0], [18.7, 6035.0], [18.8, 6035.0], [18.9, 6039.0], [19.0, 6046.0], [19.1, 6046.0], [19.2, 6047.0], [19.3, 6047.0], [19.4, 6049.0], [19.5, 6052.0], [19.6, 6052.0], [19.7, 6055.0], [19.8, 6055.0], [19.9, 6059.0], [20.0, 6061.0], [20.1, 6061.0], [20.2, 6063.0], [20.3, 6063.0], [20.4, 6192.0], [20.5, 6192.0], [20.6, 6195.0], [20.7, 6198.0], [20.8, 6198.0], [20.9, 6200.0], [21.0, 6200.0], [21.1, 6206.0], [21.2, 6222.0], [21.3, 6222.0], [21.4, 6224.0], [21.5, 6224.0], [21.6, 6230.0], [21.7, 6233.0], [21.8, 6233.0], [21.9, 6243.0], [22.0, 6243.0], [22.1, 6244.0], [22.2, 6247.0], [22.3, 6247.0], [22.4, 6249.0], [22.5, 6249.0], [22.6, 6252.0], [22.7, 6256.0], [22.8, 6256.0], [22.9, 6257.0], [23.0, 6257.0], [23.1, 6258.0], [23.2, 6260.0], [23.3, 6260.0], [23.4, 6265.0], [23.5, 6265.0], [23.6, 6276.0], [23.7, 6282.0], [23.8, 6282.0], [23.9, 6284.0], [24.0, 6284.0], [24.1, 6288.0], [24.2, 6294.0], [24.3, 6294.0], [24.4, 6297.0], [24.5, 6297.0], [24.6, 6297.0], [24.7, 6298.0], [24.8, 6298.0], [24.9, 6300.0], [25.0, 6300.0], [25.1, 6302.0], [25.2, 6304.0], [25.3, 6304.0], [25.4, 6307.0], [25.5, 6307.0], [25.6, 6325.0], [25.7, 6328.0], [25.8, 6328.0], [25.9, 6520.0], [26.0, 6520.0], [26.1, 6528.0], [26.2, 6533.0], [26.3, 6533.0], [26.4, 6535.0], [26.5, 6535.0], [26.6, 6537.0], [26.7, 6548.0], [26.8, 6548.0], [26.9, 6550.0], [27.0, 6550.0], [27.1, 6551.0], [27.2, 6554.0], [27.3, 6554.0], [27.4, 6556.0], [27.5, 6556.0], [27.6, 6559.0], [27.7, 6562.0], [27.8, 6562.0], [27.9, 6565.0], [28.0, 6565.0], [28.1, 6568.0], [28.2, 6571.0], [28.3, 6571.0], [28.4, 6580.0], [28.5, 6580.0], [28.6, 6582.0], [28.7, 6583.0], [28.8, 6583.0], [28.9, 6586.0], [29.0, 6586.0], [29.1, 6591.0], [29.2, 6591.0], [29.3, 6591.0], [29.4, 6594.0], [29.5, 6594.0], [29.6, 6595.0], [29.7, 6595.0], [29.8, 6595.0], [29.9, 6606.0], [30.0, 6606.0], [30.1, 6611.0], [30.2, 6612.0], [30.3, 6612.0], [30.4, 6613.0], [30.5, 6613.0], [30.6, 6614.0], [30.7, 6615.0], [30.8, 6615.0], [30.9, 6621.0], [31.0, 6621.0], [31.1, 6622.0], [31.2, 6630.0], [31.3, 6630.0], [31.4, 6633.0], [31.5, 6633.0], [31.6, 6636.0], [31.7, 6643.0], [31.8, 6643.0], [31.9, 6654.0], [32.0, 6654.0], [32.1, 6655.0], [32.2, 6657.0], [32.3, 6657.0], [32.4, 6661.0], [32.5, 6661.0], [32.6, 6664.0], [32.7, 6668.0], [32.8, 6668.0], [32.9, 6673.0], [33.0, 6673.0], [33.1, 6678.0], [33.2, 6689.0], [33.3, 6689.0], [33.4, 6700.0], [33.5, 6700.0], [33.6, 6704.0], [33.7, 6716.0], [33.8, 6716.0], [33.9, 6722.0], [34.0, 6722.0], [34.1, 6725.0], [34.2, 6730.0], [34.3, 6730.0], [34.4, 6752.0], [34.5, 6752.0], [34.6, 6757.0], [34.7, 6759.0], [34.8, 6759.0], [34.9, 6761.0], [35.0, 6761.0], [35.1, 6765.0], [35.2, 6768.0], [35.3, 6768.0], [35.4, 6769.0], [35.5, 6769.0], [35.6, 6770.0], [35.7, 6773.0], [35.8, 6773.0], [35.9, 6774.0], [36.0, 6774.0], [36.1, 6776.0], [36.2, 6777.0], [36.3, 6777.0], [36.4, 6780.0], [36.5, 6780.0], [36.6, 6784.0], [36.7, 6784.0], [36.8, 6784.0], [36.9, 6787.0], [37.0, 6787.0], [37.1, 6787.0], [37.2, 6789.0], [37.3, 6789.0], [37.4, 6791.0], [37.5, 6791.0], [37.6, 6793.0], [37.7, 6796.0], [37.8, 6796.0], [37.9, 6800.0], [38.0, 6809.0], [38.1, 6809.0], [38.2, 6811.0], [38.3, 6811.0], [38.4, 6814.0], [38.5, 6817.0], [38.6, 6817.0], [38.7, 6821.0], [38.8, 6821.0], [38.9, 6826.0], [39.0, 6829.0], [39.1, 6829.0], [39.2, 6833.0], [39.3, 6833.0], [39.4, 6840.0], [39.5, 6847.0], [39.6, 6847.0], [39.7, 6849.0], [39.8, 6849.0], [39.9, 6852.0], [40.0, 6859.0], [40.1, 6859.0], [40.2, 6862.0], [40.3, 6862.0], [40.4, 6865.0], [40.5, 6867.0], [40.6, 6867.0], [40.7, 6870.0], [40.8, 6870.0], [40.9, 6873.0], [41.0, 6875.0], [41.1, 6875.0], [41.2, 6876.0], [41.3, 6876.0], [41.4, 6878.0], [41.5, 6882.0], [41.6, 6882.0], [41.7, 6912.0], [41.8, 6912.0], [41.9, 6916.0], [42.0, 6918.0], [42.1, 6918.0], [42.2, 6930.0], [42.3, 6930.0], [42.4, 6933.0], [42.5, 6935.0], [42.6, 6935.0], [42.7, 6940.0], [42.8, 6940.0], [42.9, 6951.0], [43.0, 6954.0], [43.1, 6954.0], [43.2, 6957.0], [43.3, 6957.0], [43.4, 6959.0], [43.5, 6964.0], [43.6, 6964.0], [43.7, 6968.0], [43.8, 6968.0], [43.9, 6973.0], [44.0, 6975.0], [44.1, 6975.0], [44.2, 6977.0], [44.3, 6977.0], [44.4, 6986.0], [44.5, 6989.0], [44.6, 6989.0], [44.7, 7002.0], [44.8, 7002.0], [44.9, 7007.0], [45.0, 7011.0], [45.1, 7011.0], [45.2, 7014.0], [45.3, 7014.0], [45.4, 7016.0], [45.5, 7018.0], [45.6, 7018.0], [45.7, 7020.0], [45.8, 7020.0], [45.9, 7027.0], [46.0, 7030.0], [46.1, 7030.0], [46.2, 7031.0], [46.3, 7031.0], [46.4, 7032.0], [46.5, 7035.0], [46.6, 7035.0], [46.7, 7039.0], [46.8, 7039.0], [46.9, 7041.0], [47.0, 7043.0], [47.1, 7043.0], [47.2, 7059.0], [47.3, 7059.0], [47.4, 7136.0], [47.5, 7138.0], [47.6, 7138.0], [47.7, 7147.0], [47.8, 7147.0], [47.9, 7152.0], [48.0, 7152.0], [48.1, 7152.0], [48.2, 7155.0], [48.3, 7155.0], [48.4, 7163.0], [48.5, 7168.0], [48.6, 7168.0], [48.7, 7174.0], [48.8, 7174.0], [48.9, 7176.0], [49.0, 7177.0], [49.1, 7177.0], [49.2, 7179.0], [49.3, 7179.0], [49.4, 7181.0], [49.5, 7181.0], [49.6, 7181.0], [49.7, 7182.0], [49.8, 7182.0], [49.9, 7184.0], [50.0, 7185.0], [50.1, 7185.0], [50.2, 7190.0], [50.3, 7190.0], [50.4, 7193.0], [50.5, 7196.0], [50.6, 7196.0], [50.7, 7199.0], [50.8, 7199.0], [50.9, 7199.0], [51.0, 7202.0], [51.1, 7202.0], [51.2, 7211.0], [51.3, 7211.0], [51.4, 7211.0], [51.5, 7214.0], [51.6, 7214.0], [51.7, 7215.0], [51.8, 7215.0], [51.9, 7218.0], [52.0, 7219.0], [52.1, 7219.0], [52.2, 7221.0], [52.3, 7221.0], [52.4, 7224.0], [52.5, 7227.0], [52.6, 7227.0], [52.7, 7231.0], [52.8, 7231.0], [52.9, 7233.0], [53.0, 7234.0], [53.1, 7234.0], [53.2, 7236.0], [53.3, 7236.0], [53.4, 7237.0], [53.5, 7241.0], [53.6, 7241.0], [53.7, 7254.0], [53.8, 7254.0], [53.9, 7258.0], [54.0, 7261.0], [54.1, 7261.0], [54.2, 7262.0], [54.3, 7262.0], [54.4, 7265.0], [54.5, 7272.0], [54.6, 7272.0], [54.7, 7273.0], [54.8, 7273.0], [54.9, 7275.0], [55.0, 7277.0], [55.1, 7277.0], [55.2, 7278.0], [55.3, 7278.0], [55.4, 7278.0], [55.5, 7280.0], [55.6, 7280.0], [55.7, 7283.0], [55.8, 7283.0], [55.9, 7283.0], [56.0, 7287.0], [56.1, 7287.0], [56.2, 7296.0], [56.3, 7296.0], [56.4, 7302.0], [56.5, 7306.0], [56.6, 7306.0], [56.7, 7309.0], [56.8, 7309.0], [56.9, 7376.0], [57.0, 7378.0], [57.1, 7378.0], [57.2, 7383.0], [57.3, 7383.0], [57.4, 7385.0], [57.5, 7388.0], [57.6, 7388.0], [57.7, 7388.0], [57.8, 7388.0], [57.9, 7391.0], [58.0, 7392.0], [58.1, 7392.0], [58.2, 7396.0], [58.3, 7396.0], [58.4, 7397.0], [58.5, 7399.0], [58.6, 7399.0], [58.7, 7399.0], [58.8, 7399.0], [58.9, 7402.0], [59.0, 7403.0], [59.1, 7403.0], [59.2, 7406.0], [59.3, 7406.0], [59.4, 7415.0], [59.5, 7419.0], [59.6, 7419.0], [59.7, 7419.0], [59.8, 7419.0], [59.9, 7421.0], [60.0, 7424.0], [60.1, 7424.0], [60.2, 7427.0], [60.3, 7427.0], [60.4, 7430.0], [60.5, 7434.0], [60.6, 7434.0], [60.7, 7434.0], [60.8, 7434.0], [60.9, 7435.0], [61.0, 7437.0], [61.1, 7437.0], [61.2, 7439.0], [61.3, 7439.0], [61.4, 7440.0], [61.5, 7440.0], [61.6, 7440.0], [61.7, 7442.0], [61.8, 7442.0], [61.9, 7443.0], [62.0, 7444.0], [62.1, 7444.0], [62.2, 7445.0], [62.3, 7445.0], [62.4, 7447.0], [62.5, 7450.0], [62.6, 7450.0], [62.7, 7454.0], [62.8, 7454.0], [62.9, 7455.0], [63.0, 7458.0], [63.1, 7458.0], [63.2, 7458.0], [63.3, 7458.0], [63.4, 7459.0], [63.5, 7464.0], [63.6, 7464.0], [63.7, 7465.0], [63.8, 7465.0], [63.9, 7465.0], [64.0, 7467.0], [64.1, 7467.0], [64.2, 7467.0], [64.3, 7467.0], [64.4, 7469.0], [64.5, 7470.0], [64.6, 7470.0], [64.7, 7471.0], [64.8, 7471.0], [64.9, 7472.0], [65.0, 7473.0], [65.1, 7473.0], [65.2, 7476.0], [65.3, 7476.0], [65.4, 7476.0], [65.5, 7476.0], [65.6, 7476.0], [65.7, 7479.0], [65.8, 7479.0], [65.9, 7479.0], [66.0, 7481.0], [66.1, 7481.0], [66.2, 7481.0], [66.3, 7481.0], [66.4, 7482.0], [66.5, 7484.0], [66.6, 7484.0], [66.7, 7484.0], [66.8, 7484.0], [66.9, 7485.0], [67.0, 7486.0], [67.1, 7486.0], [67.2, 7486.0], [67.3, 7486.0], [67.4, 7486.0], [67.5, 7490.0], [67.6, 7490.0], [67.7, 7491.0], [67.8, 7491.0], [67.9, 7494.0], [68.0, 7496.0], [68.1, 7496.0], [68.2, 7499.0], [68.3, 7499.0], [68.4, 7502.0], [68.5, 7505.0], [68.6, 7505.0], [68.7, 7506.0], [68.8, 7506.0], [68.9, 7507.0], [69.0, 7508.0], [69.1, 7508.0], [69.2, 7512.0], [69.3, 7512.0], [69.4, 7519.0], [69.5, 7522.0], [69.6, 7522.0], [69.7, 7523.0], [69.8, 7523.0], [69.9, 7526.0], [70.0, 7527.0], [70.1, 7527.0], [70.2, 7530.0], [70.3, 7530.0], [70.4, 7530.0], [70.5, 7533.0], [70.6, 7533.0], [70.7, 7533.0], [70.8, 7533.0], [70.9, 7536.0], [71.0, 7538.0], [71.1, 7538.0], [71.2, 7540.0], [71.3, 7540.0], [71.4, 7543.0], [71.5, 7544.0], [71.6, 7544.0], [71.7, 7545.0], [71.8, 7545.0], [71.9, 7549.0], [72.0, 7554.0], [72.1, 7554.0], [72.2, 7556.0], [72.3, 7556.0], [72.4, 7559.0], [72.5, 7563.0], [72.6, 7563.0], [72.7, 7564.0], [72.8, 7564.0], [72.9, 7569.0], [73.0, 7573.0], [73.1, 7573.0], [73.2, 7573.0], [73.3, 7573.0], [73.4, 7577.0], [73.5, 7579.0], [73.6, 7579.0], [73.7, 7580.0], [73.8, 7580.0], [73.9, 7581.0], [74.0, 7584.0], [74.1, 7584.0], [74.2, 7588.0], [74.3, 7588.0], [74.4, 7589.0], [74.5, 7591.0], [74.6, 7591.0], [74.7, 7592.0], [74.8, 7592.0], [74.9, 7597.0], [75.0, 7602.0], [75.1, 7602.0], [75.2, 7607.0], [75.3, 7607.0], [75.4, 7609.0], [75.5, 7610.0], [75.6, 7610.0], [75.7, 7613.0], [75.8, 7613.0], [75.9, 7615.0], [76.0, 7618.0], [76.1, 7618.0], [76.2, 7619.0], [76.3, 7619.0], [76.4, 7620.0], [76.5, 7625.0], [76.6, 7625.0], [76.7, 7631.0], [76.8, 7631.0], [76.9, 7632.0], [77.0, 7633.0], [77.1, 7633.0], [77.2, 7634.0], [77.3, 7634.0], [77.4, 7641.0], [77.5, 7642.0], [77.6, 7642.0], [77.7, 7644.0], [77.8, 7644.0], [77.9, 7645.0], [78.0, 7645.0], [78.1, 7645.0], [78.2, 7646.0], [78.3, 7646.0], [78.4, 7646.0], [78.5, 7648.0], [78.6, 7648.0], [78.7, 7651.0], [78.8, 7651.0], [78.9, 7652.0], [79.0, 7653.0], [79.1, 7653.0], [79.2, 7657.0], [79.3, 7657.0], [79.4, 7658.0], [79.5, 7658.0], [79.6, 7659.0], [79.7, 7661.0], [79.8, 7661.0], [79.9, 7661.0], [80.0, 7661.0], [80.1, 7662.0], [80.2, 7668.0], [80.3, 7668.0], [80.4, 7670.0], [80.5, 7670.0], [80.6, 7670.0], [80.7, 7671.0], [80.8, 7671.0], [80.9, 7671.0], [81.0, 7671.0], [81.1, 7672.0], [81.2, 7673.0], [81.3, 7673.0], [81.4, 7674.0], [81.5, 7674.0], [81.6, 7674.0], [81.7, 7675.0], [81.8, 7675.0], [81.9, 7675.0], [82.0, 7675.0], [82.1, 7677.0], [82.2, 7677.0], [82.3, 7677.0], [82.4, 7678.0], [82.5, 7678.0], [82.6, 7678.0], [82.7, 7679.0], [82.8, 7679.0], [82.9, 7679.0], [83.0, 7681.0], [83.1, 7681.0], [83.2, 7682.0], [83.3, 7682.0], [83.4, 7684.0], [83.5, 7684.0], [83.6, 7684.0], [83.7, 7684.0], [83.8, 7684.0], [83.9, 7685.0], [84.0, 7685.0], [84.1, 7687.0], [84.2, 7691.0], [84.3, 7691.0], [84.4, 7695.0], [84.5, 7695.0], [84.6, 7696.0], [84.7, 7697.0], [84.8, 7697.0], [84.9, 7698.0], [85.0, 7698.0], [85.1, 7700.0], [85.2, 7702.0], [85.3, 7702.0], [85.4, 7705.0], [85.5, 7705.0], [85.6, 7705.0], [85.7, 7706.0], [85.8, 7706.0], [85.9, 7707.0], [86.0, 7707.0], [86.1, 7709.0], [86.2, 7710.0], [86.3, 7710.0], [86.4, 7712.0], [86.5, 7712.0], [86.6, 7712.0], [86.7, 7714.0], [86.8, 7714.0], [86.9, 7715.0], [87.0, 7715.0], [87.1, 7715.0], [87.2, 7716.0], [87.3, 7716.0], [87.4, 7717.0], [87.5, 7717.0], [87.6, 7719.0], [87.7, 7720.0], [87.8, 7720.0], [87.9, 7721.0], [88.0, 7721.0], [88.1, 7723.0], [88.2, 7724.0], [88.3, 7724.0], [88.4, 7724.0], [88.5, 7724.0], [88.6, 7725.0], [88.7, 7726.0], [88.8, 7726.0], [88.9, 7727.0], [89.0, 7727.0], [89.1, 7730.0], [89.2, 7732.0], [89.3, 7732.0], [89.4, 7733.0], [89.5, 7733.0], [89.6, 7733.0], [89.7, 7735.0], [89.8, 7735.0], [89.9, 7737.0], [90.0, 7737.0], [90.1, 7737.0], [90.2, 7738.0], [90.3, 7738.0], [90.4, 7739.0], [90.5, 7739.0], [90.6, 7742.0], [90.7, 7742.0], [90.8, 7742.0], [90.9, 7743.0], [91.0, 7743.0], [91.1, 7745.0], [91.2, 7745.0], [91.3, 7745.0], [91.4, 7746.0], [91.5, 7746.0], [91.6, 7747.0], [91.7, 7747.0], [91.8, 7747.0], [91.9, 7748.0], [92.0, 7748.0], [92.1, 7748.0], [92.2, 7749.0], [92.3, 7749.0], [92.4, 7752.0], [92.5, 7752.0], [92.6, 7753.0], [92.7, 7753.0], [92.8, 7753.0], [92.9, 7753.0], [93.0, 7753.0], [93.1, 7755.0], [93.2, 7755.0], [93.3, 7755.0], [93.4, 7756.0], [93.5, 7756.0], [93.6, 7757.0], [93.7, 7758.0], [93.8, 7758.0], [93.9, 7759.0], [94.0, 7759.0], [94.1, 7764.0], [94.2, 7764.0], [94.3, 7764.0], [94.4, 7764.0], [94.5, 7764.0], [94.6, 7767.0], [94.7, 7767.0], [94.8, 7767.0], [94.9, 7768.0], [95.0, 7768.0], [95.1, 7772.0], [95.2, 7772.0], [95.3, 7772.0], [95.4, 7776.0], [95.5, 7776.0], [95.6, 7776.0], [95.7, 7777.0], [95.8, 7777.0], [95.9, 7779.0], [96.0, 7779.0], [96.1, 7781.0], [96.2, 7781.0], [96.3, 7781.0], [96.4, 7786.0], [96.5, 7786.0], [96.6, 7789.0], [96.7, 7793.0], [96.8, 7793.0], [96.9, 7794.0], [97.0, 7794.0], [97.1, 7795.0], [97.2, 7803.0], [97.3, 7803.0], [97.4, 7817.0], [97.5, 7817.0], [97.6, 7821.0], [97.7, 7822.0], [97.8, 7822.0], [97.9, 7828.0], [98.0, 7828.0], [98.1, 7834.0], [98.2, 7839.0], [98.3, 7839.0], [98.4, 7845.0], [98.5, 7845.0], [98.6, 7845.0], [98.7, 7850.0], [98.8, 7850.0], [98.9, 7854.0], [99.0, 7854.0], [99.1, 7857.0], [99.2, 7860.0], [99.3, 7860.0], [99.4, 7862.0], [99.5, 7862.0], [99.6, 7862.0], [99.7, 7873.0], [99.8, 7873.0], [99.9, 7882.0], [100.0, 7882.0]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 33.0], [0.3, 33.0], [0.4, 36.0], [0.5, 37.0], [0.6, 37.0], [0.7, 40.0], [0.8, 40.0], [0.9, 43.0], [1.0, 46.0], [1.1, 46.0], [1.2, 46.0], [1.3, 46.0], [1.4, 61.0], [1.5, 68.0], [1.6, 68.0], [1.7, 70.0], [1.8, 70.0], [1.9, 71.0], [2.0, 77.0], [2.1, 77.0], [2.2, 79.0], [2.3, 79.0], [2.4, 82.0], [2.5, 85.0], [2.6, 85.0], [2.7, 88.0], [2.8, 88.0], [2.9, 88.0], [3.0, 93.0], [3.1, 93.0], [3.2, 97.0], [3.3, 97.0], [3.4, 98.0], [3.5, 106.0], [3.6, 106.0], [3.7, 109.0], [3.8, 109.0], [3.9, 112.0], [4.0, 147.0], [4.1, 147.0], [4.2, 149.0], [4.3, 149.0], [4.4, 151.0], [4.5, 154.0], [4.6, 154.0], [4.7, 158.0], [4.8, 158.0], [4.9, 162.0], [5.0, 163.0], [5.1, 163.0], [5.2, 167.0], [5.3, 167.0], [5.4, 168.0], [5.5, 168.0], [5.6, 172.0], [5.7, 174.0], [5.8, 174.0], [5.9, 176.0], [6.0, 176.0], [6.1, 179.0], [6.2, 180.0], [6.3, 180.0], [6.4, 182.0], [6.5, 182.0], [6.6, 185.0], [6.7, 192.0], [6.8, 192.0], [6.9, 193.0], [7.0, 193.0], [7.1, 222.0], [7.2, 233.0], [7.3, 233.0], [7.4, 236.0], [7.5, 236.0], [7.6, 242.0], [7.7, 259.0], [7.8, 259.0], [7.9, 263.0], [8.0, 263.0], [8.1, 271.0], [8.2, 274.0], [8.3, 274.0], [8.4, 278.0], [8.5, 278.0], [8.6, 279.0], [8.7, 282.0], [8.8, 282.0], [8.9, 347.0], [9.0, 347.0], [9.1, 353.0], [9.2, 354.0], [9.3, 354.0], [9.4, 354.0], [9.5, 354.0], [9.6, 355.0], [9.7, 359.0], [9.8, 359.0], [9.9, 363.0], [10.0, 365.0], [10.1, 365.0], [10.2, 369.0], [10.3, 369.0], [10.4, 370.0], [10.5, 370.0], [10.6, 370.0], [10.7, 373.0], [10.8, 373.0], [10.9, 374.0], [11.0, 378.0], [11.1, 378.0], [11.2, 378.0], [11.3, 378.0], [11.4, 386.0], [11.5, 388.0], [11.6, 388.0], [11.7, 391.0], [11.8, 391.0], [11.9, 396.0], [12.0, 398.0], [12.1, 398.0], [12.2, 400.0], [12.3, 400.0], [12.4, 402.0], [12.5, 403.0], [12.6, 403.0], [12.7, 403.0], [12.8, 403.0], [12.9, 403.0], [13.0, 404.0], [13.1, 404.0], [13.2, 420.0], [13.3, 420.0], [13.4, 423.0], [13.5, 426.0], [13.6, 426.0], [13.7, 435.0], [13.8, 435.0], [13.9, 440.0], [14.0, 445.0], [14.1, 445.0], [14.2, 620.0], [14.3, 620.0], [14.4, 621.0], [14.5, 623.0], [14.6, 623.0], [14.7, 630.0], [14.8, 630.0], [14.9, 631.0], [15.0, 631.0], [15.1, 631.0], [15.2, 632.0], [15.3, 632.0], [15.4, 633.0], [15.5, 633.0], [15.6, 633.0], [15.7, 633.0], [15.8, 633.0], [15.9, 633.0], [16.0, 634.0], [16.1, 634.0], [16.2, 634.0], [16.3, 634.0], [16.4, 634.0], [16.5, 635.0], [16.6, 635.0], [16.7, 635.0], [16.8, 635.0], [16.9, 636.0], [17.0, 636.0], [17.1, 636.0], [17.2, 636.0], [17.3, 636.0], [17.4, 637.0], [17.5, 638.0], [17.6, 638.0], [17.7, 640.0], [17.8, 640.0], [17.9, 653.0], [18.0, 661.0], [18.1, 661.0], [18.2, 664.0], [18.3, 664.0], [18.4, 667.0], [18.5, 668.0], [18.6, 668.0], [18.7, 671.0], [18.8, 671.0], [18.9, 673.0], [19.0, 681.0], [19.1, 681.0], [19.2, 683.0], [19.3, 683.0], [19.4, 698.0], [19.5, 820.0], [19.6, 820.0], [19.7, 821.0], [19.8, 821.0], [19.9, 821.0], [20.0, 822.0], [20.1, 822.0], [20.2, 823.0], [20.3, 823.0], [20.4, 823.0], [20.5, 824.0], [20.6, 824.0], [20.7, 824.0], [20.8, 824.0], [20.9, 825.0], [21.0, 825.0], [21.1, 825.0], [21.2, 825.0], [21.3, 825.0], [21.4, 826.0], [21.5, 826.0], [21.6, 826.0], [21.7, 826.0], [21.8, 826.0], [21.9, 826.0], [22.0, 826.0], [22.1, 826.0], [22.2, 827.0], [22.3, 827.0], [22.4, 827.0], [22.5, 827.0], [22.6, 827.0], [22.7, 827.0], [22.8, 827.0], [22.9, 827.0], [23.0, 827.0], [23.1, 827.0], [23.2, 827.0], [23.3, 827.0], [23.4, 827.0], [23.5, 827.0], [23.6, 827.0], [23.7, 827.0], [23.8, 827.0], [23.9, 827.0], [24.0, 828.0], [24.1, 828.0], [24.2, 828.0], [24.3, 828.0], [24.4, 828.0], [24.5, 829.0], [24.6, 829.0], [24.7, 829.0], [24.8, 829.0], [24.9, 915.0], [25.0, 916.0], [25.1, 916.0], [25.2, 916.0], [25.3, 916.0], [25.4, 917.0], [25.5, 917.0], [25.6, 917.0], [25.7, 917.0], [25.8, 917.0], [25.9, 917.0], [26.0, 917.0], [26.1, 917.0], [26.2, 917.0], [26.3, 917.0], [26.4, 917.0], [26.5, 918.0], [26.6, 918.0], [26.7, 918.0], [26.8, 918.0], [26.9, 919.0], [27.0, 919.0], [27.1, 919.0], [27.2, 919.0], [27.3, 919.0], [27.4, 920.0], [27.5, 920.0], [27.6, 920.0], [27.7, 920.0], [27.8, 920.0], [27.9, 920.0], [28.0, 921.0], [28.1, 921.0], [28.2, 921.0], [28.3, 921.0], [28.4, 922.0], [28.5, 922.0], [28.6, 922.0], [28.7, 923.0], [28.8, 923.0], [28.9, 926.0], [29.0, 954.0], [29.1, 954.0], [29.2, 958.0], [29.3, 958.0], [29.4, 960.0], [29.5, 963.0], [29.6, 963.0], [29.7, 963.0], [29.8, 963.0], [29.9, 966.0], [30.0, 966.0], [30.1, 966.0], [30.2, 1236.0], [30.3, 1236.0], [30.4, 1236.0], [30.5, 1238.0], [30.6, 1238.0], [30.7, 1240.0], [30.8, 1240.0], [30.9, 1240.0], [31.0, 1241.0], [31.1, 1241.0], [31.2, 1242.0], [31.3, 1242.0], [31.4, 1243.0], [31.5, 1243.0], [31.6, 1243.0], [31.7, 1244.0], [31.8, 1244.0], [31.9, 1245.0], [32.0, 1246.0], [32.1, 1246.0], [32.2, 1249.0], [32.3, 1249.0], [32.4, 1253.0], [32.5, 1255.0], [32.6, 1255.0], [32.7, 1256.0], [32.8, 1256.0], [32.9, 1257.0], [33.0, 1257.0], [33.1, 1257.0], [33.2, 1258.0], [33.3, 1258.0], [33.4, 1261.0], [33.5, 1262.0], [33.6, 1262.0], [33.7, 1263.0], [33.8, 1263.0], [33.9, 1263.0], [34.0, 1265.0], [34.1, 1265.0], [34.2, 1265.0], [34.3, 1265.0], [34.4, 1266.0], [34.5, 1267.0], [34.6, 1267.0], [34.7, 1273.0], [34.8, 1273.0], [34.9, 1273.0], [35.0, 1274.0], [35.1, 1274.0], [35.2, 1275.0], [35.3, 1275.0], [35.4, 1276.0], [35.5, 1417.0], [35.6, 1417.0], [35.7, 1421.0], [35.8, 1421.0], [35.9, 1421.0], [36.0, 1421.0], [36.1, 1421.0], [36.2, 1423.0], [36.3, 1423.0], [36.4, 1427.0], [36.5, 1449.0], [36.6, 1449.0], [36.7, 1450.0], [36.8, 1450.0], [36.9, 1451.0], [37.0, 1453.0], [37.1, 1453.0], [37.2, 1453.0], [37.3, 1453.0], [37.4, 1453.0], [37.5, 1454.0], [37.6, 1454.0], [37.7, 1456.0], [37.8, 1456.0], [37.9, 1457.0], [38.0, 1457.0], [38.1, 1457.0], [38.2, 1457.0], [38.3, 1457.0], [38.4, 1458.0], [38.5, 1458.0], [38.6, 1458.0], [38.7, 1460.0], [38.8, 1460.0], [38.9, 1461.0], [39.0, 1461.0], [39.1, 1461.0], [39.2, 1462.0], [39.3, 1462.0], [39.4, 1462.0], [39.5, 1462.0], [39.6, 1462.0], [39.7, 1462.0], [39.8, 1462.0], [39.9, 1464.0], [40.0, 1465.0], [40.1, 1465.0], [40.2, 1466.0], [40.3, 1466.0], [40.4, 1467.0], [40.5, 1467.0], [40.6, 1467.0], [40.7, 1468.0], [40.8, 1468.0], [40.9, 1648.0], [41.0, 1648.0], [41.1, 1648.0], [41.2, 1649.0], [41.3, 1649.0], [41.4, 1649.0], [41.5, 1649.0], [41.6, 1649.0], [41.7, 1649.0], [41.8, 1649.0], [41.9, 1649.0], [42.0, 1649.0], [42.1, 1649.0], [42.2, 1649.0], [42.3, 1649.0], [42.4, 1649.0], [42.5, 1650.0], [42.6, 1650.0], [42.7, 1650.0], [42.8, 1650.0], [42.9, 1652.0], [43.0, 1652.0], [43.1, 1652.0], [43.2, 1657.0], [43.3, 1657.0], [43.4, 1658.0], [43.5, 1658.0], [43.6, 1658.0], [43.7, 1763.0], [43.8, 1763.0], [43.9, 1765.0], [44.0, 1765.0], [44.1, 1765.0], [44.2, 1766.0], [44.3, 1766.0], [44.4, 1766.0], [44.5, 1766.0], [44.6, 1766.0], [44.7, 1768.0], [44.8, 1768.0], [44.9, 1768.0], [45.0, 1768.0], [45.1, 1768.0], [45.2, 1769.0], [45.3, 1769.0], [45.4, 1769.0], [45.5, 1769.0], [45.6, 1769.0], [45.7, 1769.0], [45.8, 1769.0], [45.9, 1770.0], [46.0, 1773.0], [46.1, 1773.0], [46.2, 2000.0], [46.3, 2000.0], [46.4, 2001.0], [46.5, 2001.0], [46.6, 2001.0], [46.7, 2002.0], [46.8, 2002.0], [46.9, 2003.0], [47.0, 2003.0], [47.1, 2003.0], [47.2, 2004.0], [47.3, 2004.0], [47.4, 2004.0], [47.5, 2005.0], [47.6, 2005.0], [47.7, 2005.0], [47.8, 2005.0], [47.9, 2005.0], [48.0, 2006.0], [48.1, 2006.0], [48.2, 2009.0], [48.3, 2009.0], [48.4, 2011.0], [48.5, 2012.0], [48.6, 2012.0], [48.7, 2012.0], [48.8, 2012.0], [48.9, 2013.0], [49.0, 2130.0], [49.1, 2130.0], [49.2, 2130.0], [49.3, 2130.0], [49.4, 2131.0], [49.5, 2132.0], [49.6, 2132.0], [49.7, 2132.0], [49.8, 2132.0], [49.9, 2132.0], [50.0, 2133.0], [50.1, 2133.0], [50.2, 2135.0], [50.3, 2135.0], [50.4, 2136.0], [50.5, 2137.0], [50.6, 2137.0], [50.7, 2137.0], [50.8, 2137.0], [50.9, 2233.0], [51.0, 2234.0], [51.1, 2234.0], [51.2, 2234.0], [51.3, 2234.0], [51.4, 2234.0], [51.5, 2234.0], [51.6, 2234.0], [51.7, 2234.0], [51.8, 2234.0], [51.9, 2235.0], [52.0, 2235.0], [52.1, 2235.0], [52.2, 2235.0], [52.3, 2235.0], [52.4, 2235.0], [52.5, 2235.0], [52.6, 2235.0], [52.7, 2235.0], [52.8, 2235.0], [52.9, 2235.0], [53.0, 2236.0], [53.1, 2236.0], [53.2, 2236.0], [53.3, 2236.0], [53.4, 2236.0], [53.5, 2236.0], [53.6, 2236.0], [53.7, 2236.0], [53.8, 2236.0], [53.9, 2236.0], [54.0, 2236.0], [54.1, 2236.0], [54.2, 2237.0], [54.3, 2237.0], [54.4, 2320.0], [54.5, 2320.0], [54.6, 2320.0], [54.7, 2320.0], [54.8, 2320.0], [54.9, 2321.0], [55.0, 2322.0], [55.1, 2322.0], [55.2, 2322.0], [55.3, 2322.0], [55.4, 2323.0], [55.5, 2514.0], [55.6, 2514.0], [55.7, 2514.0], [55.8, 2514.0], [55.9, 2515.0], [56.0, 2516.0], [56.1, 2516.0], [56.2, 2516.0], [56.3, 2516.0], [56.4, 2517.0], [56.5, 2517.0], [56.6, 2517.0], [56.7, 2520.0], [56.8, 2520.0], [56.9, 2520.0], [57.0, 2520.0], [57.1, 2520.0], [57.2, 2520.0], [57.3, 2520.0], [57.4, 2520.0], [57.5, 2521.0], [57.6, 2521.0], [57.7, 2521.0], [57.8, 2521.0], [57.9, 2522.0], [58.0, 2522.0], [58.1, 2522.0], [58.2, 2523.0], [58.3, 2523.0], [58.4, 2524.0], [58.5, 2524.0], [58.6, 2524.0], [58.7, 2525.0], [58.8, 2525.0], [58.9, 2526.0], [59.0, 2526.0], [59.1, 2526.0], [59.2, 2527.0], [59.3, 2527.0], [59.4, 2530.0], [59.5, 2530.0], [59.6, 2530.0], [59.7, 2532.0], [59.8, 2532.0], [59.9, 2532.0], [60.0, 2533.0], [60.1, 2533.0], [60.2, 2534.0], [60.3, 2534.0], [60.4, 2535.0], [60.5, 2535.0], [60.6, 2535.0], [60.7, 2537.0], [60.8, 2537.0], [60.9, 2612.0], [61.0, 2612.0], [61.1, 2612.0], [61.2, 2613.0], [61.3, 2613.0], [61.4, 2613.0], [61.5, 2614.0], [61.6, 2614.0], [61.7, 2614.0], [61.8, 2614.0], [61.9, 2615.0], [62.0, 2617.0], [62.1, 2617.0], [62.2, 2618.0], [62.3, 2618.0], [62.4, 2621.0], [62.5, 2622.0], [62.6, 2622.0], [62.7, 2622.0], [62.8, 2622.0], [62.9, 2622.0], [63.0, 2622.0], [63.1, 2622.0], [63.2, 2623.0], [63.3, 2623.0], [63.4, 2626.0], [63.5, 2809.0], [63.6, 2809.0], [63.7, 2809.0], [63.8, 2809.0], [63.9, 2810.0], [64.0, 2811.0], [64.1, 2811.0], [64.2, 2812.0], [64.3, 2812.0], [64.4, 2812.0], [64.5, 2812.0], [64.6, 2812.0], [64.7, 2813.0], [64.8, 2813.0], [64.9, 2813.0], [65.0, 2814.0], [65.1, 2814.0], [65.2, 2814.0], [65.3, 2814.0], [65.4, 2814.0], [65.5, 2815.0], [65.6, 2815.0], [65.7, 2815.0], [65.8, 2815.0], [65.9, 2815.0], [66.0, 2815.0], [66.1, 2815.0], [66.2, 2816.0], [66.3, 2816.0], [66.4, 2816.0], [66.5, 2816.0], [66.6, 2816.0], [66.7, 2818.0], [66.8, 2818.0], [66.9, 2818.0], [67.0, 2820.0], [67.1, 2820.0], [67.2, 2821.0], [67.3, 2821.0], [67.4, 2822.0], [67.5, 2826.0], [67.6, 2826.0], [67.7, 2928.0], [67.8, 2928.0], [67.9, 2928.0], [68.0, 2932.0], [68.1, 2932.0], [68.2, 2934.0], [68.3, 2934.0], [68.4, 2939.0], [68.5, 2944.0], [68.6, 2944.0], [68.7, 2944.0], [68.8, 2944.0], [68.9, 2944.0], [69.0, 2946.0], [69.1, 2946.0], [69.2, 2947.0], [69.3, 2947.0], [69.4, 2950.0], [69.5, 2950.0], [69.6, 2950.0], [69.7, 2964.0], [69.8, 2964.0], [69.9, 3108.0], [70.0, 3115.0], [70.1, 3115.0], [70.2, 3117.0], [70.3, 3117.0], [70.4, 3119.0], [70.5, 3121.0], [70.6, 3121.0], [70.7, 3122.0], [70.8, 3122.0], [70.9, 3123.0], [71.0, 3123.0], [71.1, 3123.0], [71.2, 3124.0], [71.3, 3124.0], [71.4, 3126.0], [71.5, 3128.0], [71.6, 3128.0], [71.7, 3129.0], [71.8, 3129.0], [71.9, 3130.0], [72.0, 3130.0], [72.1, 3131.0], [72.2, 3135.0], [72.3, 3135.0], [72.4, 3136.0], [72.5, 3136.0], [72.6, 3402.0], [72.7, 3406.0], [72.8, 3406.0], [72.9, 3409.0], [73.0, 3409.0], [73.1, 3409.0], [73.2, 3410.0], [73.3, 3410.0], [73.4, 3414.0], [73.5, 3414.0], [73.6, 3414.0], [73.7, 3428.0], [73.8, 3428.0], [73.9, 3430.0], [74.0, 3430.0], [74.1, 3436.0], [74.2, 3438.0], [74.3, 3438.0], [74.4, 3438.0], [74.5, 3438.0], [74.6, 3438.0], [74.7, 3440.0], [74.8, 3440.0], [74.9, 3441.0], [75.0, 3441.0], [75.1, 3447.0], [75.2, 3448.0], [75.3, 3448.0], [75.4, 3451.0], [75.5, 3451.0], [75.6, 3453.0], [75.7, 3454.0], [75.8, 3454.0], [75.9, 3454.0], [76.0, 3454.0], [76.1, 3460.0], [76.2, 3461.0], [76.3, 3461.0], [76.4, 3462.0], [76.5, 3462.0], [76.6, 3462.0], [76.7, 3462.0], [76.8, 3462.0], [76.9, 3469.0], [77.0, 3469.0], [77.1, 3899.0], [77.2, 3902.0], [77.3, 3902.0], [77.4, 3904.0], [77.5, 3904.0], [77.6, 3909.0], [77.7, 3912.0], [77.8, 3912.0], [77.9, 3920.0], [78.0, 3920.0], [78.1, 3920.0], [78.2, 3923.0], [78.3, 3923.0], [78.4, 3923.0], [78.5, 3923.0], [78.6, 3926.0], [78.7, 3927.0], [78.8, 3927.0], [78.9, 3928.0], [79.0, 3928.0], [79.1, 3929.0], [79.2, 3929.0], [79.3, 3929.0], [79.4, 3929.0], [79.5, 3929.0], [79.6, 3930.0], [79.7, 3930.0], [79.8, 3930.0], [79.9, 3933.0], [80.0, 3933.0], [80.1, 3934.0], [80.2, 3935.0], [80.3, 3935.0], [80.4, 3935.0], [80.5, 3935.0], [80.6, 3936.0], [80.7, 3938.0], [80.8, 3938.0], [80.9, 3940.0], [81.0, 3940.0], [81.1, 4239.0], [81.2, 4239.0], [81.3, 4239.0], [81.4, 4242.0], [81.5, 4242.0], [81.6, 4246.0], [81.7, 4248.0], [81.8, 4248.0], [81.9, 4250.0], [82.0, 4250.0], [82.1, 4254.0], [82.2, 4258.0], [82.3, 4258.0], [82.4, 4264.0], [82.5, 4264.0], [82.6, 4269.0], [82.7, 4272.0], [82.8, 4272.0], [82.9, 4273.0], [83.0, 4273.0], [83.1, 4273.0], [83.2, 4274.0], [83.3, 4274.0], [83.4, 4274.0], [83.5, 4274.0], [83.6, 4276.0], [83.7, 4278.0], [83.8, 4278.0], [83.9, 4280.0], [84.0, 4280.0], [84.1, 4280.0], [84.2, 4282.0], [84.3, 4282.0], [84.4, 4282.0], [84.5, 4282.0], [84.6, 4285.0], [84.7, 4290.0], [84.8, 4290.0], [84.9, 4295.0], [85.0, 4295.0], [85.1, 4314.0], [85.2, 4316.0], [85.3, 4316.0], [85.4, 4318.0], [85.5, 4318.0], [85.6, 4318.0], [85.7, 4319.0], [85.8, 4319.0], [85.9, 4320.0], [86.0, 4320.0], [86.1, 4320.0], [86.2, 4326.0], [86.3, 4326.0], [86.4, 4683.0], [86.5, 4683.0], [86.6, 4686.0], [86.7, 4687.0], [86.8, 4687.0], [86.9, 4687.0], [87.0, 4687.0], [87.1, 4687.0], [87.2, 4689.0], [87.3, 4689.0], [87.4, 4689.0], [87.5, 4689.0], [87.6, 4689.0], [87.7, 4689.0], [87.8, 4689.0], [87.9, 4690.0], [88.0, 4690.0], [88.1, 4691.0], [88.2, 4692.0], [88.3, 4692.0], [88.4, 4693.0], [88.5, 4693.0], [88.6, 4693.0], [88.7, 4693.0], [88.8, 4693.0], [88.9, 4693.0], [89.0, 4693.0], [89.1, 4693.0], [89.2, 4694.0], [89.3, 4694.0], [89.4, 4695.0], [89.5, 4695.0], [89.6, 4695.0], [89.7, 4698.0], [89.8, 4698.0], [89.9, 4699.0], [90.0, 4699.0], [90.1, 4699.0], [90.2, 4700.0], [90.3, 4700.0], [90.4, 4700.0], [90.5, 4700.0], [90.6, 4700.0], [90.7, 4701.0], [90.8, 4701.0], [90.9, 4701.0], [91.0, 4701.0], [91.1, 4704.0], [91.2, 4704.0], [91.3, 4704.0], [91.4, 4705.0], [91.5, 4705.0], [91.6, 4708.0], [91.7, 4962.0], [91.8, 4962.0], [91.9, 4965.0], [92.0, 4965.0], [92.1, 4966.0], [92.2, 4967.0], [92.3, 4967.0], [92.4, 5006.0], [92.5, 5006.0], [92.6, 5011.0], [92.7, 5020.0], [92.8, 5020.0], [92.9, 5022.0], [93.0, 5022.0], [93.1, 5023.0], [93.2, 5023.0], [93.3, 5023.0], [93.4, 5027.0], [93.5, 5027.0], [93.6, 5027.0], [93.7, 5028.0], [93.8, 5028.0], [93.9, 5028.0], [94.0, 5028.0], [94.1, 5031.0], [94.2, 5032.0], [94.3, 5032.0], [94.4, 5032.0], [94.5, 5032.0], [94.6, 5075.0], [94.7, 5263.0], [94.8, 5263.0], [94.9, 5264.0], [95.0, 5264.0], [95.1, 5267.0], [95.2, 5268.0], [95.3, 5268.0], [95.4, 5268.0], [95.5, 5268.0], [95.6, 5269.0], [95.7, 5269.0], [95.8, 5269.0], [95.9, 5269.0], [96.0, 5269.0], [96.1, 5270.0], [96.2, 5270.0], [96.3, 5270.0], [96.4, 5271.0], [96.5, 5271.0], [96.6, 5275.0], [96.7, 5282.0], [96.8, 5282.0], [96.9, 5285.0], [97.0, 5285.0], [97.1, 5310.0], [97.2, 5320.0], [97.3, 5320.0], [97.4, 5321.0], [97.5, 5321.0], [97.6, 5327.0], [97.7, 5333.0], [97.8, 5333.0], [97.9, 5338.0], [98.0, 5338.0], [98.1, 5342.0], [98.2, 5355.0], [98.3, 5355.0], [98.4, 5816.0], [98.5, 5816.0], [98.6, 5819.0], [98.7, 5825.0], [98.8, 5825.0], [98.9, 5827.0], [99.0, 5827.0], [99.1, 5831.0], [99.2, 5833.0], [99.3, 5833.0], [99.4, 5839.0], [99.5, 5839.0], [99.6, 5841.0], [99.7, 5849.0], [99.8, 5849.0], [99.9, 5851.0], [100.0, 5851.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 1051.0], [0.1, 1051.0], [0.2, 1057.0], [0.3, 1057.0], [0.4, 1063.0], [0.5, 1071.0], [0.6, 1071.0], [0.7, 1078.0], [0.8, 1078.0], [0.9, 1099.0], [1.0, 1102.0], [1.1, 1102.0], [1.2, 1107.0], [1.3, 1107.0], [1.4, 1111.0], [1.5, 1116.0], [1.6, 1116.0], [1.7, 1122.0], [1.8, 1122.0], [1.9, 1139.0], [2.0, 1143.0], [2.1, 1143.0], [2.2, 1148.0], [2.3, 1148.0], [2.4, 1153.0], [2.5, 1164.0], [2.6, 1164.0], [2.7, 1178.0], [2.8, 1178.0], [2.9, 1180.0], [3.0, 1186.0], [3.1, 1186.0], [3.2, 1191.0], [3.3, 1191.0], [3.4, 1202.0], [3.5, 1206.0], [3.6, 1206.0], [3.7, 1209.0], [3.8, 1209.0], [3.9, 1213.0], [4.0, 1221.0], [4.1, 1221.0], [4.2, 1240.0], [4.3, 1240.0], [4.4, 1244.0], [4.5, 1248.0], [4.6, 1248.0], [4.7, 1253.0], [4.8, 1253.0], [4.9, 1263.0], [5.0, 1266.0], [5.1, 1266.0], [5.2, 1270.0], [5.3, 1270.0], [5.4, 1290.0], [5.5, 1290.0], [5.6, 1297.0], [5.7, 1307.0], [5.8, 1307.0], [5.9, 1319.0], [6.0, 1319.0], [6.1, 1343.0], [6.2, 1348.0], [6.3, 1348.0], [6.4, 1351.0], [6.5, 1351.0], [6.6, 1356.0], [6.7, 1360.0], [6.8, 1360.0], [6.9, 1364.0], [7.0, 1364.0], [7.1, 1371.0], [7.2, 1375.0], [7.3, 1375.0], [7.4, 1380.0], [7.5, 1380.0], [7.6, 1384.0], [7.7, 1398.0], [7.8, 1398.0], [7.9, 1402.0], [8.0, 1402.0], [8.1, 1409.0], [8.2, 1415.0], [8.3, 1415.0], [8.4, 1423.0], [8.5, 1423.0], [8.6, 1426.0], [8.7, 1430.0], [8.8, 1430.0], [8.9, 1434.0], [9.0, 1434.0], [9.1, 1435.0], [9.2, 1457.0], [9.3, 1457.0], [9.4, 1462.0], [9.5, 1467.0], [9.6, 1467.0], [9.7, 1470.0], [9.8, 1470.0], [9.9, 1474.0], [10.0, 1478.0], [10.1, 1478.0], [10.2, 1482.0], [10.3, 1482.0], [10.4, 1487.0], [10.5, 1508.0], [10.6, 1508.0], [10.7, 1513.0], [10.8, 1513.0], [10.9, 1516.0], [11.0, 1519.0], [11.1, 1519.0], [11.2, 1523.0], [11.3, 1523.0], [11.4, 1527.0], [11.5, 1530.0], [11.6, 1530.0], [11.7, 1534.0], [11.8, 1534.0], [11.9, 1538.0], [12.0, 1544.0], [12.1, 1544.0], [12.2, 1559.0], [12.3, 1559.0], [12.4, 1564.0], [12.5, 1568.0], [12.6, 1568.0], [12.7, 1573.0], [12.8, 1573.0], [12.9, 1584.0], [13.0, 1594.0], [13.1, 1594.0], [13.2, 1598.0], [13.3, 1598.0], [13.4, 1602.0], [13.5, 1606.0], [13.6, 1606.0], [13.7, 1620.0], [13.8, 1620.0], [13.9, 1623.0], [14.0, 1626.0], [14.1, 1626.0], [14.2, 1632.0], [14.3, 1632.0], [14.4, 1635.0], [14.5, 1639.0], [14.6, 1639.0], [14.7, 1643.0], [14.8, 1643.0], [14.9, 1646.0], [15.0, 1656.0], [15.1, 1656.0], [15.2, 1663.0], [15.3, 1663.0], [15.4, 1680.0], [15.5, 1684.0], [15.6, 1684.0], [15.7, 1685.0], [15.8, 1685.0], [15.9, 1690.0], [16.0, 1707.0], [16.1, 1707.0], [16.2, 1720.0], [16.3, 1720.0], [16.4, 1724.0], [16.5, 1727.0], [16.6, 1727.0], [16.7, 1732.0], [16.8, 1732.0], [16.9, 1736.0], [17.0, 1740.0], [17.1, 1740.0], [17.2, 1744.0], [17.3, 1744.0], [17.4, 1747.0], [17.5, 1750.0], [17.6, 1750.0], [17.7, 1754.0], [17.8, 1754.0], [17.9, 1763.0], [18.0, 1782.0], [18.1, 1782.0], [18.2, 1785.0], [18.3, 1785.0], [18.4, 1788.0], [18.5, 1792.0], [18.6, 1792.0], [18.7, 1795.0], [18.8, 1795.0], [18.9, 1799.0], [19.0, 1805.0], [19.1, 1805.0], [19.2, 1809.0], [19.3, 1809.0], [19.4, 1828.0], [19.5, 1832.0], [19.6, 1832.0], [19.7, 1835.0], [19.8, 1835.0], [19.9, 1839.0], [20.0, 1839.0], [20.1, 1843.0], [20.2, 1847.0], [20.3, 1847.0], [20.4, 1849.0], [20.5, 1849.0], [20.6, 1855.0], [20.7, 1862.0], [20.8, 1862.0], [20.9, 1867.0], [21.0, 1867.0], [21.1, 1869.0], [21.2, 1876.0], [21.3, 1876.0], [21.4, 1893.0], [21.5, 1893.0], [21.6, 1896.0], [21.7, 1899.0], [21.8, 1899.0], [21.9, 1903.0], [22.0, 1903.0], [22.1, 1913.0], [22.2, 1918.0], [22.3, 1918.0], [22.4, 1922.0], [22.5, 1922.0], [22.6, 1926.0], [22.7, 1931.0], [22.8, 1931.0], [22.9, 1943.0], [23.0, 1943.0], [23.1, 1948.0], [23.2, 1954.0], [23.3, 1954.0], [23.4, 1959.0], [23.5, 1959.0], [23.6, 1977.0], [23.7, 1984.0], [23.8, 1984.0], [23.9, 1987.0], [24.0, 1987.0], [24.1, 1991.0], [24.2, 1994.0], [24.3, 1994.0], [24.4, 2007.0], [24.5, 2007.0], [24.6, 2010.0], [24.7, 2017.0], [24.8, 2017.0], [24.9, 2020.0], [25.0, 2020.0], [25.1, 2024.0], [25.2, 2027.0], [25.3, 2027.0], [25.4, 2031.0], [25.5, 2031.0], [25.6, 2037.0], [25.7, 2052.0], [25.8, 2052.0], [25.9, 2056.0], [26.0, 2056.0], [26.1, 2057.0], [26.2, 2063.0], [26.3, 2063.0], [26.4, 2064.0], [26.5, 2064.0], [26.6, 2070.0], [26.7, 2074.0], [26.8, 2074.0], [26.9, 2078.0], [27.0, 2078.0], [27.1, 2083.0], [27.2, 2095.0], [27.3, 2095.0], [27.4, 2098.0], [27.5, 2098.0], [27.6, 2102.0], [27.7, 2106.0], [27.8, 2106.0], [27.9, 2110.0], [28.0, 2110.0], [28.1, 2113.0], [28.2, 2120.0], [28.3, 2120.0], [28.4, 2123.0], [28.5, 2123.0], [28.6, 2127.0], [28.7, 2132.0], [28.8, 2132.0], [28.9, 2145.0], [29.0, 2145.0], [29.1, 2148.0], [29.2, 2152.0], [29.3, 2152.0], [29.4, 2158.0], [29.5, 2158.0], [29.6, 2167.0], [29.7, 2172.0], [29.8, 2172.0], [29.9, 2179.0], [30.0, 2179.0], [30.1, 2190.0], [30.2, 2195.0], [30.3, 2195.0], [30.4, 2198.0], [30.5, 2198.0], [30.6, 2201.0], [30.7, 2207.0], [30.8, 2207.0], [30.9, 2211.0], [31.0, 2211.0], [31.1, 2219.0], [31.2, 2222.0], [31.3, 2222.0], [31.4, 2227.0], [31.5, 2227.0], [31.6, 2240.0], [31.7, 2244.0], [31.8, 2244.0], [31.9, 2268.0], [32.0, 2268.0], [32.1, 2274.0], [32.2, 2277.0], [32.3, 2277.0], [32.4, 2283.0], [32.5, 2283.0], [32.6, 2297.0], [32.7, 2302.0], [32.8, 2302.0], [32.9, 2314.0], [33.0, 2314.0], [33.1, 2326.0], [33.2, 2331.0], [33.3, 2331.0], [33.4, 2337.0], [33.5, 2337.0], [33.6, 2341.0], [33.7, 2344.0], [33.8, 2344.0], [33.9, 2349.0], [34.0, 2349.0], [34.1, 2353.0], [34.2, 2355.0], [34.3, 2355.0], [34.4, 2368.0], [34.5, 2368.0], [34.6, 2375.0], [34.7, 2379.0], [34.8, 2379.0], [34.9, 2383.0], [35.0, 2383.0], [35.1, 2388.0], [35.2, 2394.0], [35.3, 2394.0], [35.4, 2425.0], [35.5, 2425.0], [35.6, 2430.0], [35.7, 2432.0], [35.8, 2432.0], [35.9, 2436.0], [36.0, 2436.0], [36.1, 2440.0], [36.2, 2443.0], [36.3, 2443.0], [36.4, 2447.0], [36.5, 2447.0], [36.6, 2452.0], [36.7, 2455.0], [36.8, 2455.0], [36.9, 2463.0], [37.0, 2463.0], [37.1, 2468.0], [37.2, 2472.0], [37.3, 2472.0], [37.4, 2480.0], [37.5, 2480.0], [37.6, 2488.0], [37.7, 2492.0], [37.8, 2492.0], [37.9, 2496.0], [38.0, 2502.0], [38.1, 2502.0], [38.2, 2511.0], [38.3, 2511.0], [38.4, 2517.0], [38.5, 2541.0], [38.6, 2541.0], [38.7, 2545.0], [38.8, 2545.0], [38.9, 2547.0], [39.0, 2553.0], [39.1, 2553.0], [39.2, 2555.0], [39.3, 2555.0], [39.4, 2559.0], [39.5, 2563.0], [39.6, 2563.0], [39.7, 2566.0], [39.8, 2566.0], [39.9, 2570.0], [40.0, 2575.0], [40.1, 2575.0], [40.2, 2577.0], [40.3, 2577.0], [40.4, 2585.0], [40.5, 2600.0], [40.6, 2600.0], [40.7, 2603.0], [40.8, 2603.0], [40.9, 2605.0], [41.0, 2610.0], [41.1, 2610.0], [41.2, 2614.0], [41.3, 2614.0], [41.4, 2616.0], [41.5, 2620.0], [41.6, 2620.0], [41.7, 2623.0], [41.8, 2623.0], [41.9, 2631.0], [42.0, 2634.0], [42.1, 2634.0], [42.2, 2636.0], [42.3, 2636.0], [42.4, 2639.0], [42.5, 2644.0], [42.6, 2644.0], [42.7, 2648.0], [42.8, 2648.0], [42.9, 2654.0], [43.0, 2669.0], [43.1, 2669.0], [43.2, 2672.0], [43.3, 2672.0], [43.4, 2681.0], [43.5, 2684.0], [43.6, 2684.0], [43.7, 2688.0], [43.8, 2688.0], [43.9, 2694.0], [44.0, 2697.0], [44.1, 2697.0], [44.2, 2704.0], [44.3, 2704.0], [44.4, 2707.0], [44.5, 2711.0], [44.6, 2711.0], [44.7, 2715.0], [44.8, 2715.0], [44.9, 2727.0], [45.0, 2731.0], [45.1, 2731.0], [45.2, 2735.0], [45.3, 2735.0], [45.4, 2739.0], [45.5, 2751.0], [45.6, 2751.0], [45.7, 2755.0], [45.8, 2755.0], [45.9, 2759.0], [46.0, 2762.0], [46.1, 2762.0], [46.2, 2766.0], [46.3, 2766.0], [46.4, 2777.0], [46.5, 2782.0], [46.6, 2782.0], [46.7, 2784.0], [46.8, 2784.0], [46.9, 2788.0], [47.0, 2800.0], [47.1, 2800.0], [47.2, 2805.0], [47.3, 2805.0], [47.4, 2808.0], [47.5, 2811.0], [47.6, 2811.0], [47.7, 2815.0], [47.8, 2815.0], [47.9, 2824.0], [48.0, 2829.0], [48.1, 2829.0], [48.2, 2838.0], [48.3, 2838.0], [48.4, 2841.0], [48.5, 2844.0], [48.6, 2844.0], [48.7, 2850.0], [48.8, 2850.0], [48.9, 2862.0], [49.0, 2865.0], [49.1, 2865.0], [49.2, 2871.0], [49.3, 2871.0], [49.4, 2876.0], [49.5, 2886.0], [49.6, 2886.0], [49.7, 2892.0], [49.8, 2892.0], [49.9, 2896.0], [50.0, 2901.0], [50.1, 2901.0], [50.2, 2914.0], [50.3, 2914.0], [50.4, 2928.0], [50.5, 2933.0], [50.6, 2933.0], [50.7, 2937.0], [50.8, 2937.0], [50.9, 2942.0], [51.0, 2946.0], [51.1, 2946.0], [51.2, 2950.0], [51.3, 2950.0], [51.4, 2954.0], [51.5, 2960.0], [51.6, 2960.0], [51.7, 2972.0], [51.8, 2972.0], [51.9, 2976.0], [52.0, 2980.0], [52.1, 2980.0], [52.2, 2984.0], [52.3, 2984.0], [52.4, 2997.0], [52.5, 3003.0], [52.6, 3003.0], [52.7, 3007.0], [52.8, 3007.0], [52.9, 3011.0], [53.0, 3025.0], [53.1, 3025.0], [53.2, 3028.0], [53.3, 3028.0], [53.4, 3033.0], [53.5, 3038.0], [53.6, 3038.0], [53.7, 3043.0], [53.8, 3043.0], [53.9, 3048.0], [54.0, 3053.0], [54.1, 3053.0], [54.2, 3060.0], [54.3, 3060.0], [54.4, 3064.0], [54.5, 3075.0], [54.6, 3075.0], [54.7, 3080.0], [54.8, 3080.0], [54.9, 3083.0], [55.0, 3089.0], [55.1, 3089.0], [55.2, 3101.0], [55.3, 3101.0], [55.4, 3111.0], [55.5, 3128.0], [55.6, 3128.0], [55.7, 3132.0], [55.8, 3132.0], [55.9, 3138.0], [56.0, 3148.0], [56.1, 3148.0], [56.2, 3154.0], [56.3, 3154.0], [56.4, 3165.0], [56.5, 3168.0], [56.6, 3168.0], [56.7, 3170.0], [56.8, 3170.0], [56.9, 3176.0], [57.0, 3186.0], [57.1, 3186.0], [57.2, 3188.0], [57.3, 3188.0], [57.4, 3195.0], [57.5, 3220.0], [57.6, 3220.0], [57.7, 3222.0], [57.8, 3222.0], [57.9, 3227.0], [58.0, 3235.0], [58.1, 3235.0], [58.2, 3247.0], [58.3, 3247.0], [58.4, 3252.0], [58.5, 3254.0], [58.6, 3254.0], [58.7, 3259.0], [58.8, 3259.0], [58.9, 3267.0], [59.0, 3279.0], [59.1, 3279.0], [59.2, 3285.0], [59.3, 3285.0], [59.4, 3288.0], [59.5, 3294.0], [59.6, 3294.0], [59.7, 3304.0], [59.8, 3304.0], [59.9, 3323.0], [60.0, 3335.0], [60.1, 3335.0], [60.2, 3338.0], [60.3, 3338.0], [60.4, 3342.0], [60.5, 3346.0], [60.6, 3346.0], [60.7, 3350.0], [60.8, 3350.0], [60.9, 3357.0], [61.0, 3362.0], [61.1, 3362.0], [61.2, 3382.0], [61.3, 3382.0], [61.4, 3385.0], [61.5, 3388.0], [61.6, 3388.0], [61.7, 3392.0], [61.8, 3392.0], [61.9, 3396.0], [62.0, 3399.0], [62.1, 3399.0], [62.2, 3404.0], [62.3, 3404.0], [62.4, 3412.0], [62.5, 3432.0], [62.6, 3432.0], [62.7, 3436.0], [62.8, 3436.0], [62.9, 3439.0], [63.0, 3444.0], [63.1, 3444.0], [63.2, 3457.0], [63.3, 3457.0], [63.4, 3458.0], [63.5, 3467.0], [63.6, 3467.0], [63.7, 3470.0], [63.8, 3470.0], [63.9, 3476.0], [64.0, 3480.0], [64.1, 3480.0], [64.2, 3483.0], [64.3, 3483.0], [64.4, 3487.0], [64.5, 3492.0], [64.6, 3492.0], [64.7, 3499.0], [64.8, 3499.0], [64.9, 3515.0], [65.0, 3520.0], [65.1, 3520.0], [65.2, 3526.0], [65.3, 3526.0], [65.4, 3529.0], [65.5, 3548.0], [65.6, 3548.0], [65.7, 3554.0], [65.8, 3554.0], [65.9, 3558.0], [66.0, 3561.0], [66.1, 3561.0], [66.2, 3566.0], [66.3, 3566.0], [66.4, 3569.0], [66.5, 3572.0], [66.6, 3572.0], [66.7, 3574.0], [66.8, 3574.0], [66.9, 3578.0], [67.0, 3581.0], [67.1, 3581.0], [67.2, 3584.0], [67.3, 3584.0], [67.4, 3586.0], [67.5, 3591.0], [67.6, 3591.0], [67.7, 3594.0], [67.8, 3594.0], [67.9, 3597.0], [68.0, 3614.0], [68.1, 3614.0], [68.2, 3618.0], [68.3, 3618.0], [68.4, 3621.0], [68.5, 3624.0], [68.6, 3624.0], [68.7, 3628.0], [68.8, 3628.0], [68.9, 3631.0], [69.0, 3635.0], [69.1, 3635.0], [69.2, 3638.0], [69.3, 3638.0], [69.4, 3642.0], [69.5, 3645.0], [69.6, 3645.0], [69.7, 3649.0], [69.8, 3649.0], [69.9, 3659.0], [70.0, 3663.0], [70.1, 3663.0], [70.2, 3669.0], [70.3, 3669.0], [70.4, 3681.0], [70.5, 3685.0], [70.6, 3685.0], [70.7, 3690.0], [70.8, 3690.0], [70.9, 3722.0], [71.0, 3725.0], [71.1, 3725.0], [71.2, 3729.0], [71.3, 3729.0], [71.4, 3735.0], [71.5, 3738.0], [71.6, 3738.0], [71.7, 3745.0], [71.8, 3745.0], [71.9, 3749.0], [72.0, 3757.0], [72.1, 3757.0], [72.2, 3760.0], [72.3, 3760.0], [72.4, 3765.0], [72.5, 3781.0], [72.6, 3781.0], [72.7, 3785.0], [72.8, 3785.0], [72.9, 3788.0], [73.0, 3793.0], [73.1, 3793.0], [73.2, 3798.0], [73.3, 3798.0], [73.4, 3808.0], [73.5, 3810.0], [73.6, 3810.0], [73.7, 3813.0], [73.8, 3813.0], [73.9, 3816.0], [74.0, 3830.0], [74.1, 3830.0], [74.2, 3833.0], [74.3, 3833.0], [74.4, 3836.0], [74.5, 3839.0], [74.6, 3839.0], [74.7, 3841.0], [74.8, 3841.0], [74.9, 3848.0], [75.0, 3851.0], [75.1, 3851.0], [75.2, 3854.0], [75.3, 3854.0], [75.4, 3859.0], [75.5, 3877.0], [75.6, 3877.0], [75.7, 3879.0], [75.8, 3879.0], [75.9, 3880.0], [76.0, 3881.0], [76.1, 3881.0], [76.2, 3883.0], [76.3, 3883.0], [76.4, 3886.0], [76.5, 3910.0], [76.6, 3910.0], [76.7, 3915.0], [76.8, 3915.0], [76.9, 3918.0], [77.0, 3921.0], [77.1, 3921.0], [77.2, 3923.0], [77.3, 3923.0], [77.4, 3925.0], [77.5, 3925.0], [77.6, 3930.0], [77.7, 3933.0], [77.8, 3933.0], [77.9, 3953.0], [78.0, 3953.0], [78.1, 3957.0], [78.2, 3960.0], [78.3, 3960.0], [78.4, 3962.0], [78.5, 3962.0], [78.6, 3963.0], [78.7, 3965.0], [78.8, 3965.0], [78.9, 3967.0], [79.0, 3967.0], [79.1, 3972.0], [79.2, 3981.0], [79.3, 3981.0], [79.4, 3984.0], [79.5, 3984.0], [79.6, 3986.0], [79.7, 3987.0], [79.8, 3987.0], [79.9, 4000.0], [80.0, 4000.0], [80.1, 4000.0], [80.2, 4002.0], [80.3, 4002.0], [80.4, 4006.0], [80.5, 4006.0], [80.6, 4009.0], [80.7, 4016.0], [80.8, 4016.0], [80.9, 4019.0], [81.0, 4019.0], [81.1, 4023.0], [81.2, 4026.0], [81.3, 4026.0], [81.4, 4029.0], [81.5, 4029.0], [81.6, 4039.0], [81.7, 4044.0], [81.8, 4044.0], [81.9, 4053.0], [82.0, 4053.0], [82.1, 4055.0], [82.2, 4057.0], [82.3, 4057.0], [82.4, 4065.0], [82.5, 4065.0], [82.6, 4079.0], [82.7, 4086.0], [82.8, 4086.0], [82.9, 4090.0], [83.0, 4090.0], [83.1, 4095.0], [83.2, 4100.0], [83.3, 4100.0], [83.4, 4103.0], [83.5, 4103.0], [83.6, 4108.0], [83.7, 4112.0], [83.8, 4112.0], [83.9, 4120.0], [84.0, 4120.0], [84.1, 4129.0], [84.2, 4132.0], [84.3, 4132.0], [84.4, 4133.0], [84.5, 4133.0], [84.6, 4133.0], [84.7, 4138.0], [84.8, 4138.0], [84.9, 4141.0], [85.0, 4141.0], [85.1, 4145.0], [85.2, 4156.0], [85.3, 4156.0], [85.4, 4160.0], [85.5, 4160.0], [85.6, 4165.0], [85.7, 4167.0], [85.8, 4167.0], [85.9, 4171.0], [86.0, 4171.0], [86.1, 4175.0], [86.2, 4181.0], [86.3, 4181.0], [86.4, 4182.0], [86.5, 4182.0], [86.6, 4186.0], [86.7, 4188.0], [86.8, 4188.0], [86.9, 4192.0], [87.0, 4192.0], [87.1, 4194.0], [87.2, 4200.0], [87.3, 4200.0], [87.4, 4206.0], [87.5, 4206.0], [87.6, 4212.0], [87.7, 4219.0], [87.8, 4219.0], [87.9, 4244.0], [88.0, 4244.0], [88.1, 4248.0], [88.2, 4250.0], [88.3, 4250.0], [88.4, 4255.0], [88.5, 4255.0], [88.6, 4261.0], [88.7, 4265.0], [88.8, 4265.0], [88.9, 4266.0], [89.0, 4266.0], [89.1, 4267.0], [89.2, 4272.0], [89.3, 4272.0], [89.4, 4284.0], [89.5, 4284.0], [89.6, 4288.0], [89.7, 4292.0], [89.8, 4292.0], [89.9, 4297.0], [90.0, 4297.0], [90.1, 4306.0], [90.2, 4311.0], [90.3, 4311.0], [90.4, 4314.0], [90.5, 4314.0], [90.6, 4322.0], [90.7, 4342.0], [90.8, 4342.0], [90.9, 4347.0], [91.0, 4347.0], [91.1, 4352.0], [91.2, 4357.0], [91.3, 4357.0], [91.4, 4361.0], [91.5, 4361.0], [91.6, 4368.0], [91.7, 4372.0], [91.8, 4372.0], [91.9, 4376.0], [92.0, 4376.0], [92.1, 4381.0], [92.2, 4387.0], [92.3, 4387.0], [92.4, 4390.0], [92.5, 4390.0], [92.6, 4397.0], [92.7, 4442.0], [92.8, 4442.0], [92.9, 4448.0], [93.0, 4448.0], [93.1, 4456.0], [93.2, 4463.0], [93.3, 4463.0], [93.4, 4470.0], [93.5, 4470.0], [93.6, 4472.0], [93.7, 4484.0], [93.8, 4484.0], [93.9, 4504.0], [94.0, 4504.0], [94.1, 4505.0], [94.2, 4512.0], [94.3, 4512.0], [94.4, 4528.0], [94.5, 4528.0], [94.6, 4534.0], [94.7, 4542.0], [94.8, 4542.0], [94.9, 4549.0], [95.0, 4549.0], [95.1, 4554.0], [95.2, 4563.0], [95.3, 4563.0], [95.4, 4655.0], [95.5, 4655.0], [95.6, 4757.0], [95.7, 4758.0], [95.8, 4758.0], [95.9, 4758.0], [96.0, 4758.0], [96.1, 4758.0], [96.2, 4758.0], [96.3, 4758.0], [96.4, 4758.0], [96.5, 4758.0], [96.6, 4758.0], [96.7, 4792.0], [96.8, 4792.0], [96.9, 4863.0], [97.0, 4863.0], [97.1, 4893.0], [97.2, 4898.0], [97.3, 4898.0], [97.4, 4903.0], [97.5, 4903.0], [97.6, 4906.0], [97.7, 4907.0], [97.8, 4907.0], [97.9, 4910.0], [98.0, 4910.0], [98.1, 4921.0], [98.2, 4992.0], [98.3, 4992.0], [98.4, 5149.0], [98.5, 5149.0], [98.6, 5483.0], [98.7, 5717.0], [98.8, 5717.0], [98.9, 6203.0], [99.0, 6203.0], [99.1, 6430.0], [99.2, 6766.0], [99.3, 6766.0], [99.4, 6950.0], [99.5, 6950.0], [99.6, 7183.0], [99.7, 7430.0], [99.8, 7430.0], [99.9, 7699.0], [100.0, 7699.0]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 73.0, "series": [{"data": [[900.0, 1.0], [1800.0, 1.0], [2400.0, 1.0], [3000.0, 1.0], [3500.0, 1.0], [4100.0, 1.0], [4800.0, 1.0], [5300.0, 17.0], [5500.0, 18.0], [5600.0, 20.0], [5400.0, 5.0], [5700.0, 23.0], [6100.0, 3.0], [5900.0, 17.0], [6000.0, 15.0], [6200.0, 24.0], [6300.0, 6.0], [6600.0, 21.0], [6500.0, 24.0], [6800.0, 23.0], [6900.0, 18.0], [6700.0, 27.0], [7100.0, 22.0], [7000.0, 16.0], [7200.0, 32.0], [7400.0, 57.0], [7300.0, 15.0], [7500.0, 40.0], [7600.0, 60.0], [7700.0, 73.0], [7800.0, 17.0]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[0.0, 21.0], [600.0, 32.0], [800.0, 32.0], [900.0, 32.0], [1200.0, 32.0], [1400.0, 32.0], [100.0, 21.0], [1600.0, 17.0], [1700.0, 15.0], [2000.0, 17.0], [2100.0, 11.0], [2200.0, 21.0], [2300.0, 7.0], [2500.0, 32.0], [2600.0, 16.0], [2800.0, 25.0], [2900.0, 13.0], [3100.0, 16.0], [200.0, 11.0], [3400.0, 27.0], [3800.0, 1.0], [3900.0, 23.0], [4300.0, 8.0], [4200.0, 24.0], [4600.0, 23.0], [300.0, 20.0], [4700.0, 9.0], [5000.0, 14.0], [4900.0, 4.0], [5200.0, 14.0], [5300.0, 8.0], [5800.0, 10.0], [400.0, 12.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1000.0, 6.0], [1100.0, 14.0], [1200.0, 14.0], [1300.0, 13.0], [1400.0, 16.0], [1500.0, 17.0], [1600.0, 16.0], [1700.0, 18.0], [1800.0, 17.0], [1900.0, 15.0], [2000.0, 19.0], [2100.0, 18.0], [2300.0, 16.0], [2200.0, 13.0], [2400.0, 16.0], [2500.0, 15.0], [2600.0, 22.0], [2800.0, 18.0], [2700.0, 17.0], [2900.0, 15.0], [3000.0, 16.0], [3100.0, 14.0], [3300.0, 15.0], [3200.0, 13.0], [3400.0, 16.0], [3500.0, 19.0], [3700.0, 15.0], [3600.0, 17.0], [3800.0, 19.0], [3900.0, 20.0], [4000.0, 20.0], [4300.0, 16.0], [4200.0, 17.0], [4100.0, 24.0], [4500.0, 9.0], [4600.0, 1.0], [4400.0, 7.0], [4800.0, 3.0], [4700.0, 8.0], [5100.0, 1.0], [4900.0, 6.0], [5400.0, 1.0], [5700.0, 1.0], [6200.0, 1.0], [6400.0, 1.0], [6900.0, 1.0], [6700.0, 1.0], [7100.0, 1.0], [7400.0, 1.0], [7600.0, 1.0]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 85.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1491.0, "series": [{"data": [[0.0, 85.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 224.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1491.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 467.437222222221, "minX": 1.6212705E12, "maxY": 467.437222222221, "series": [{"data": [[1.6212705E12, 467.437222222221]], "isOverall": false, "label": "mto-restful Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212705E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 31.5, "minX": 1.0, "maxY": 7699.0, "series": [{"data": [[596.0, 7066.037735849059], [600.0, 7459.897260273971], [599.0, 7618.569444444445], [598.0, 7472.4418604651155], [597.0, 7306.790697674419], [595.0, 6827.999999999998], [594.0, 6648.28125], [593.0, 6260.875000000001], [592.0, 5867.328124999998], [591.0, 5565.0], [590.0, 5355.444444444444], [434.0, 997.0]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[595.9783333333322, 6905.01166666666]], "isOverall": false, "label": "Get booking-Aggregated", "isController": false}, {"data": [[97.0, 31.5], [100.0, 49.5], [104.0, 43.0], [106.0, 61.0], [108.0, 70.0], [109.0, 71.0], [110.0, 68.0], [111.0, 77.0], [112.0, 82.0], [113.0, 85.0], [114.0, 88.0], [115.0, 88.0], [116.0, 93.0], [117.0, 97.0], [120.0, 102.0], [121.0, 109.0], [123.0, 112.0], [139.0, 147.0], [140.0, 149.0], [141.0, 151.0], [142.0, 154.0], [144.0, 160.0], [146.0, 165.0], [148.0, 168.0], [149.0, 173.0], [150.0, 176.0], [151.0, 179.0], [152.0, 180.0], [153.0, 182.0], [154.0, 185.0], [156.0, 192.5], [160.0, 240.5], [161.0, 263.0], [162.0, 272.5], [164.0, 233.0], [165.0, 236.0], [166.0, 262.0], [168.0, 278.0], [169.0, 279.0], [195.0, 365.0], [196.0, 369.0], [197.0, 370.0], [199.0, 366.3333333333333], [200.0, 363.0], [201.0, 387.0], [202.0, 391.0], [205.0, 396.0], [207.0, 402.3333333333333], [208.0, 354.0], [210.0, 386.3333333333333], [211.0, 354.0], [212.0, 355.0], [213.0, 359.0], [214.0, 410.75], [216.0, 445.0], [218.0, 389.6666666666667], [221.0, 435.0], [222.0, 409.0], [298.0, 661.0], [299.0, 664.0], [301.0, 653.0], [302.0, 667.5], [303.0, 671.0], [306.0, 621.0], [304.0, 673.0], [307.0, 620.0], [316.0, 638.0], [317.0, 635.5], [318.0, 630.0], [308.0, 623.0], [309.0, 682.0], [310.0, 698.0], [312.0, 633.0], [313.0, 635.0], [314.0, 636.0], [315.0, 637.0], [321.0, 632.0], [320.0, 632.0], [323.0, 634.0], [324.0, 634.0], [325.0, 634.0], [326.0, 633.0], [327.0, 635.0], [328.0, 636.0], [329.0, 636.0], [330.0, 633.0], [393.0, 820.0], [394.0, 823.0], [395.0, 824.0], [396.0, 821.0], [397.0, 822.0], [399.0, 826.0], [401.0, 824.0], [400.0, 823.5], [403.0, 825.0], [412.0, 827.6666666666666], [414.0, 827.5], [415.0, 826.6666666666666], [404.0, 824.0], [406.0, 827.0], [407.0, 826.0], [408.0, 827.0], [409.0, 827.0], [410.0, 829.0], [418.0, 827.0], [420.0, 827.0], [421.0, 827.0], [422.0, 826.0], [423.0, 828.0], [456.0, 923.0], [457.0, 921.0], [459.0, 922.0], [460.0, 919.75], [461.0, 916.5], [464.0, 917.6666666666666], [466.0, 916.5], [468.0, 917.5], [469.0, 917.0], [470.0, 916.6666666666666], [474.0, 920.0], [476.0, 920.0], [478.0, 924.0], [483.0, 954.0], [485.0, 960.0], [487.0, 958.0], [497.0, 963.0], [498.0, 966.0], [500.0, 966.0], [501.0, 963.0], [600.0, 3060.756563245825]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[505.66666666666674, 2298.7133333333327]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 1057.0], [3.0, 1063.0], [4.0, 1071.0], [5.0, 1078.0], [6.0, 1099.0], [7.0, 1102.0], [8.0, 1107.0], [9.0, 1111.0], [10.0, 1116.0], [11.0, 1122.0], [12.0, 1139.0], [13.0, 1143.0], [14.0, 1148.0], [15.0, 1153.0], [16.0, 1164.0], [17.0, 1178.0], [18.0, 1180.0], [19.0, 1186.0], [20.0, 1191.0], [21.0, 1202.0], [22.0, 1206.0], [23.0, 1209.0], [24.0, 1213.0], [25.0, 1221.0], [26.0, 1240.0], [27.0, 1244.0], [28.0, 1248.0], [29.0, 1253.0], [30.0, 1263.0], [31.0, 1266.0], [33.0, 1290.0], [32.0, 1270.0], [35.0, 1307.0], [34.0, 1297.0], [37.0, 1343.0], [36.0, 1319.0], [39.0, 1351.0], [38.0, 1348.0], [41.0, 1360.0], [40.0, 1356.0], [43.0, 1371.0], [42.0, 1364.0], [45.0, 1380.0], [44.0, 1375.0], [47.0, 1398.0], [46.0, 1384.0], [49.0, 1409.0], [48.0, 1402.0], [51.0, 1423.0], [50.0, 1415.0], [53.0, 1430.0], [52.0, 1426.0], [55.0, 1435.0], [54.0, 1434.0], [57.0, 1462.0], [56.0, 1457.0], [59.0, 1470.0], [58.0, 1467.0], [61.0, 1478.0], [60.0, 1474.0], [63.0, 1487.0], [62.0, 1482.0], [67.0, 1519.0], [66.0, 1516.0], [65.0, 1513.0], [64.0, 1508.0], [71.0, 1534.0], [70.0, 1530.0], [69.0, 1527.0], [68.0, 1523.0], [75.0, 1564.0], [74.0, 1559.0], [73.0, 1544.0], [72.0, 1538.0], [79.0, 1594.0], [78.0, 1584.0], [77.0, 1573.0], [76.0, 1568.0], [83.0, 1620.0], [82.0, 1606.0], [81.0, 1602.0], [80.0, 1598.0], [87.0, 1635.0], [86.0, 1632.0], [85.0, 1626.0], [84.0, 1623.0], [91.0, 1656.0], [90.0, 1646.0], [89.0, 1643.0], [88.0, 1639.0], [95.0, 1685.0], [94.0, 1684.0], [93.0, 1680.0], [92.0, 1663.0], [99.0, 1724.0], [98.0, 1720.0], [97.0, 1707.0], [96.0, 1690.0], [103.0, 1740.0], [102.0, 1736.0], [101.0, 1732.0], [100.0, 1727.0], [107.0, 1754.0], [106.0, 1750.0], [105.0, 1747.0], [104.0, 1744.0], [111.0, 1788.0], [110.0, 1785.0], [109.0, 1782.0], [108.0, 1763.0], [115.0, 1805.0], [114.0, 1799.0], [113.0, 1795.0], [112.0, 1792.0], [119.0, 1835.0], [118.0, 1832.0], [117.0, 1828.0], [116.0, 1809.0], [123.0, 1849.0], [122.0, 1847.0], [121.0, 1843.0], [120.0, 1839.0], [127.0, 1869.0], [126.0, 1867.0], [125.0, 1862.0], [124.0, 1855.0], [135.0, 1922.0], [134.0, 1918.0], [133.0, 1913.0], [132.0, 1903.0], [131.0, 1899.0], [130.0, 1896.0], [129.0, 1893.0], [128.0, 1876.0], [143.0, 1984.0], [142.0, 1977.0], [141.0, 1959.0], [140.0, 1954.0], [139.0, 1948.0], [138.0, 1943.0], [137.0, 1931.0], [136.0, 1926.0], [151.0, 2024.0], [150.0, 2020.0], [149.0, 2017.0], [148.0, 2010.0], [147.0, 2007.0], [146.0, 1994.0], [145.0, 1991.0], [144.0, 1987.0], [159.0, 2064.0], [158.0, 2063.0], [157.0, 2057.0], [156.0, 2056.0], [155.0, 2052.0], [154.0, 2037.0], [153.0, 2031.0], [152.0, 2027.0], [167.0, 2106.0], [166.0, 2102.0], [165.0, 2098.0], [164.0, 2095.0], [163.0, 2083.0], [162.0, 2078.0], [161.0, 2074.0], [160.0, 2070.0], [175.0, 2148.0], [174.0, 2145.0], [173.0, 2132.0], [172.0, 2127.0], [171.0, 2123.0], [170.0, 2120.0], [169.0, 2113.0], [168.0, 2110.0], [183.0, 2198.0], [182.0, 2195.0], [181.0, 2190.0], [180.0, 2179.0], [179.0, 2172.0], [178.0, 2167.0], [177.0, 2158.0], [176.0, 2152.0], [191.0, 2244.0], [190.0, 2240.0], [189.0, 2227.0], [188.0, 2222.0], [187.0, 2219.0], [186.0, 2211.0], [185.0, 2207.0], [184.0, 2201.0], [199.0, 2326.0], [198.0, 2314.0], [197.0, 2302.0], [196.0, 2297.0], [195.0, 2283.0], [194.0, 2277.0], [193.0, 2274.0], [192.0, 2268.0], [207.0, 2368.0], [206.0, 2355.0], [205.0, 2353.0], [204.0, 2349.0], [203.0, 2344.0], [202.0, 2341.0], [201.0, 2337.0], [200.0, 2331.0], [215.0, 2432.0], [214.0, 2430.0], [213.0, 2425.0], [212.0, 2394.0], [211.0, 2388.0], [210.0, 2383.0], [209.0, 2379.0], [208.0, 2375.0], [223.0, 2468.0], [222.0, 2463.0], [221.0, 2455.0], [220.0, 2452.0], [219.0, 2447.0], [218.0, 2443.0], [217.0, 2440.0], [216.0, 2436.0], [231.0, 2517.0], [230.0, 2511.0], [229.0, 2502.0], [228.0, 2496.0], [227.0, 2492.0], [226.0, 2488.0], [225.0, 2480.0], [224.0, 2472.0], [239.0, 2566.0], [238.0, 2563.0], [237.0, 2559.0], [236.0, 2555.0], [235.0, 2553.0], [234.0, 2547.0], [233.0, 2545.0], [232.0, 2541.0], [247.0, 2610.0], [246.0, 2605.0], [245.0, 2603.0], [244.0, 2600.0], [243.0, 2585.0], [242.0, 2577.0], [241.0, 2575.0], [240.0, 2570.0], [255.0, 2639.0], [254.0, 2636.0], [253.0, 2634.0], [252.0, 2631.0], [251.0, 2623.0], [250.0, 2620.0], [249.0, 2616.0], [248.0, 2614.0], [270.0, 2727.0], [271.0, 2731.0], [269.0, 2715.0], [268.0, 2711.0], [267.0, 2707.0], [266.0, 2704.0], [265.0, 2697.0], [264.0, 2694.0], [263.0, 2688.0], [257.0, 2648.0], [256.0, 2644.0], [259.0, 2669.0], [258.0, 2654.0], [262.0, 2684.0], [261.0, 2681.0], [260.0, 2672.0], [286.0, 2811.0], [287.0, 2815.0], [285.0, 2808.0], [284.0, 2805.0], [283.0, 2800.0], [282.0, 2788.0], [281.0, 2784.0], [280.0, 2782.0], [279.0, 2777.0], [273.0, 2739.0], [272.0, 2735.0], [275.0, 2755.0], [274.0, 2751.0], [278.0, 2766.0], [277.0, 2762.0], [276.0, 2759.0], [302.0, 2914.0], [303.0, 2928.0], [301.0, 2901.0], [300.0, 2896.0], [299.0, 2892.0], [298.0, 2886.0], [297.0, 2876.0], [296.0, 2871.0], [295.0, 2865.0], [289.0, 2829.0], [288.0, 2824.0], [291.0, 2841.0], [290.0, 2838.0], [294.0, 2856.0], [292.0, 2844.0], [318.0, 3011.0], [319.0, 3025.0], [317.0, 3007.0], [316.0, 3003.0], [315.0, 2997.0], [314.0, 2984.0], [313.0, 2980.0], [312.0, 2976.0], [311.0, 2972.0], [305.0, 2937.0], [304.0, 2933.0], [307.0, 2946.0], [306.0, 2942.0], [310.0, 2960.0], [309.0, 2954.0], [308.0, 2950.0], [334.0, 3128.0], [335.0, 3132.0], [333.0, 3111.0], [332.0, 3101.0], [331.0, 3089.0], [330.0, 3083.0], [329.0, 3080.0], [328.0, 3075.0], [327.0, 3064.0], [321.0, 3033.0], [320.0, 3028.0], [323.0, 3043.0], [322.0, 3038.0], [326.0, 3060.0], [325.0, 3053.0], [324.0, 3048.0], [350.0, 3247.0], [351.0, 3252.0], [349.0, 3235.0], [348.0, 3227.0], [347.0, 3222.0], [346.0, 3220.0], [345.0, 3195.0], [344.0, 3188.0], [343.0, 3186.0], [337.0, 3148.0], [336.0, 3138.0], [339.0, 3165.0], [338.0, 3154.0], [342.0, 3176.0], [341.0, 3170.0], [340.0, 3168.0], [366.0, 3357.0], [367.0, 3362.0], [365.0, 3350.0], [364.0, 3346.0], [363.0, 3342.0], [362.0, 3338.0], [361.0, 3335.0], [360.0, 3323.0], [359.0, 3304.0], [353.0, 3259.0], [352.0, 3254.0], [355.0, 3279.0], [354.0, 3267.0], [358.0, 3294.0], [357.0, 3288.0], [356.0, 3285.0], [382.0, 3462.5], [383.0, 3470.0], [380.0, 3457.0], [371.0, 3392.0], [370.0, 3388.0], [369.0, 3385.0], [368.0, 3382.0], [379.0, 3444.0], [378.0, 3439.0], [377.0, 3436.0], [376.0, 3432.0], [375.0, 3412.0], [374.0, 3404.0], [373.0, 3399.0], [372.0, 3396.0], [398.0, 3566.0], [399.0, 3569.0], [397.0, 3561.0], [396.0, 3558.0], [395.0, 3554.0], [394.0, 3548.0], [393.0, 3529.0], [392.0, 3526.0], [391.0, 3520.0], [385.0, 3480.0], [384.0, 3476.0], [387.0, 3487.0], [386.0, 3483.0], [390.0, 3515.0], [389.0, 3499.0], [388.0, 3492.0], [414.0, 3631.0], [415.0, 3635.0], [413.0, 3628.0], [412.0, 3624.0], [411.0, 3621.0], [410.0, 3618.0], [409.0, 3614.0], [408.0, 3597.0], [407.0, 3594.0], [401.0, 3574.0], [400.0, 3572.0], [403.0, 3581.0], [402.0, 3578.0], [406.0, 3591.0], [405.0, 3586.0], [404.0, 3584.0], [430.0, 3738.0], [431.0, 3745.0], [429.0, 3735.0], [428.0, 3729.0], [427.0, 3725.0], [426.0, 3722.0], [425.0, 3690.0], [424.0, 3685.0], [423.0, 3681.0], [417.0, 3642.0], [416.0, 3638.0], [419.0, 3649.0], [418.0, 3645.0], [422.0, 3669.0], [421.0, 3663.0], [420.0, 3659.0], [446.0, 3833.0], [447.0, 3836.0], [445.0, 3830.0], [444.0, 3816.0], [443.0, 3813.0], [442.0, 3810.0], [441.0, 3808.0], [440.0, 3798.0], [439.0, 3793.0], [433.0, 3757.0], [432.0, 3749.0], [435.0, 3765.0], [434.0, 3760.0], [438.0, 3788.0], [437.0, 3785.0], [436.0, 3781.0], [462.0, 3918.0], [463.0, 3921.0], [461.0, 3915.0], [460.0, 3910.0], [459.0, 3886.0], [458.0, 3880.0], [457.0, 3883.0], [456.0, 3881.0], [455.0, 3879.0], [449.0, 3841.0], [448.0, 3839.0], [451.0, 3851.0], [450.0, 3848.0], [454.0, 3877.0], [453.0, 3859.0], [452.0, 3854.0], [478.0, 3986.0], [479.0, 3987.0], [477.0, 3984.0], [476.0, 3981.0], [475.0, 3972.0], [474.0, 3967.0], [473.0, 3964.0], [472.0, 3962.0], [470.0, 3960.0], [465.0, 3925.0], [464.0, 3923.0], [467.0, 3933.0], [466.0, 3930.0], [469.0, 3957.0], [468.0, 3953.0], [494.0, 4057.0], [495.0, 4065.0], [493.0, 4055.0], [492.0, 4053.0], [491.0, 4044.0], [490.0, 4039.0], [489.0, 4029.0], [488.0, 4026.0], [487.0, 4023.0], [481.0, 4000.0], [480.0, 4000.0], [483.0, 4006.0], [482.0, 4002.0], [486.0, 4019.0], [485.0, 4016.0], [484.0, 4009.0], [510.0, 4141.0], [511.0, 4145.0], [509.0, 4138.0], [508.0, 4133.0], [507.0, 4129.0], [506.0, 4133.0], [505.0, 4132.0], [504.0, 4120.0], [503.0, 4112.0], [497.0, 4086.0], [496.0, 4079.0], [499.0, 4095.0], [498.0, 4090.0], [502.0, 4108.0], [501.0, 4103.0], [500.0, 4100.0], [540.0, 4297.0], [543.0, 4314.0], [529.0, 4248.0], [528.0, 4244.0], [531.0, 4255.0], [530.0, 4250.0], [533.0, 4265.0], [532.0, 4261.0], [542.0, 4311.0], [541.0, 4306.0], [539.0, 4292.0], [538.0, 4288.0], [537.0, 4284.0], [536.0, 4272.0], [527.0, 4219.0], [513.0, 4160.0], [512.0, 4156.0], [515.0, 4167.0], [514.0, 4165.0], [517.0, 4175.0], [516.0, 4171.0], [519.0, 4182.0], [518.0, 4181.0], [526.0, 4212.0], [525.0, 4206.0], [524.0, 4200.0], [523.0, 4194.0], [522.0, 4188.0], [521.0, 4192.0], [520.0, 4186.0], [535.0, 4266.0], [534.0, 4267.0], [575.0, 4863.0], [563.0, 4484.0], [566.0, 4512.0], [565.0, 4505.0], [564.0, 4504.0], [562.0, 4470.0], [561.0, 4472.0], [560.0, 4463.0], [559.0, 4456.0], [545.0, 4342.0], [544.0, 4322.0], [547.0, 4352.0], [546.0, 4347.0], [549.0, 4361.0], [548.0, 4357.0], [551.0, 4372.0], [550.0, 4368.0], [558.0, 4448.0], [557.0, 4442.0], [556.0, 4397.0], [555.0, 4390.0], [554.0, 4387.0], [553.0, 4381.0], [552.0, 4376.0], [592.0, 5483.0], [596.0, 6766.0], [600.0, 7699.0], [583.0, 4893.0], [582.0, 4632.363636363637], [580.0, 4758.0], [577.0, 4769.333333333333], [599.0, 7430.0], [598.0, 7183.0], [597.0, 6950.0], [595.0, 6430.0], [594.0, 6203.0], [593.0, 5717.0], [591.0, 5149.0], [590.0, 4992.0], [589.0, 4921.0], [588.0, 4910.0], [587.0, 4907.0], [586.0, 4906.0], [585.0, 4900.5], [1.0, 1051.0]], "isOverall": false, "label": "Create booking", "isController": false}, {"data": [[300.6683333333337, 2955.9066666666686]], "isOverall": false, "label": "Create booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9810.0, "minX": 1.6212705E12, "maxY": 67974.1, "series": [{"data": [[1.6212705E12, 67974.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6212705E12, 9810.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212705E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2298.7133333333327, "minX": 1.6212705E12, "maxY": 6905.01166666666, "series": [{"data": [[1.6212705E12, 6905.01166666666]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[1.6212705E12, 2298.7133333333327]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.6212705E12, 2955.9066666666686]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212705E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2298.6600000000003, "minX": 1.6212705E12, "maxY": 6904.995, "series": [{"data": [[1.6212705E12, 6904.995]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[1.6212705E12, 2298.6600000000003]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.6212705E12, 2955.894999999997]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212705E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6212705E12, "maxY": 444.06000000000034, "series": [{"data": [[1.6212705E12, 0.0]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[1.6212705E12, 444.06000000000034]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.6212705E12, 0.0]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212705E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6212705E12, "maxY": 7882.0, "series": [{"data": [[1.6212705E12, 7882.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6212705E12, 7529.700000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6212705E12, 7794.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6212705E12, 7699.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6212705E12, 30.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6212705E12, 3758.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212705E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 46.0, "minX": 13.0, "maxY": 7715.0, "series": [{"data": [[133.0, 7715.0], [131.0, 5949.0], [137.0, 426.0], [139.0, 6800.0], [168.0, 1624.5], [48.0, 7599.5], [13.0, 46.0], [52.0, 5269.5], [66.0, 3454.0], [65.0, 4683.0], [83.0, 2005.0], [97.0, 2064.0], [446.0, 3523.0], [125.0, 7440.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 446.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 46.0, "minX": 13.0, "maxY": 7715.0, "series": [{"data": [[133.0, 7715.0], [131.0, 5949.0], [137.0, 426.0], [139.0, 6800.0], [168.0, 1624.5], [48.0, 7599.5], [13.0, 46.0], [52.0, 5269.5], [66.0, 3453.5], [65.0, 4683.0], [83.0, 2005.0], [97.0, 2064.0], [446.0, 3523.0], [125.0, 7440.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 446.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6212705E12, "maxY": 30.0, "series": [{"data": [[1.6212705E12, 30.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212705E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6212705E12, "maxY": 30.0, "series": [{"data": [[1.6212705E12, 30.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212705E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6212705E12, "maxY": 10.0, "series": [{"data": [[1.6212705E12, 10.0]], "isOverall": false, "label": "Create booking-success", "isController": false}, {"data": [[1.6212705E12, 10.0]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.6212705E12, 10.0]], "isOverall": false, "label": "Get booking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212705E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6212705E12, "maxY": 30.0, "series": [{"data": [[1.6212705E12, 30.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212705E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

