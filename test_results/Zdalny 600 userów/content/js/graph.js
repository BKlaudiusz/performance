/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 34.0, "minX": 0.0, "maxY": 4932.0, "series": [{"data": [[0.0, 400.0], [0.1, 400.0], [0.2, 414.0], [0.3, 414.0], [0.4, 416.0], [0.5, 417.0], [0.6, 417.0], [0.7, 422.0], [0.8, 422.0], [0.9, 425.0], [1.0, 432.0], [1.1, 432.0], [1.2, 433.0], [1.3, 433.0], [1.4, 434.0], [1.5, 435.0], [1.6, 435.0], [1.7, 435.0], [1.8, 435.0], [1.9, 437.0], [2.0, 439.0], [2.1, 439.0], [2.2, 441.0], [2.3, 441.0], [2.4, 442.0], [2.5, 444.0], [2.6, 444.0], [2.7, 444.0], [2.8, 444.0], [2.9, 445.0], [3.0, 446.0], [3.1, 446.0], [3.2, 447.0], [3.3, 447.0], [3.4, 449.0], [3.5, 450.0], [3.6, 450.0], [3.7, 452.0], [3.8, 452.0], [3.9, 453.0], [4.0, 455.0], [4.1, 455.0], [4.2, 456.0], [4.3, 456.0], [4.4, 456.0], [4.5, 458.0], [4.6, 458.0], [4.7, 459.0], [4.8, 459.0], [4.9, 460.0], [5.0, 460.0], [5.1, 460.0], [5.2, 461.0], [5.3, 461.0], [5.4, 463.0], [5.5, 463.0], [5.6, 463.0], [5.7, 465.0], [5.8, 465.0], [5.9, 467.0], [6.0, 467.0], [6.1, 467.0], [6.2, 472.0], [6.3, 472.0], [6.4, 472.0], [6.5, 473.0], [6.6, 473.0], [6.7, 474.0], [6.8, 474.0], [6.9, 476.0], [7.0, 476.0], [7.1, 476.0], [7.2, 477.0], [7.3, 477.0], [7.4, 478.0], [7.5, 480.0], [7.6, 480.0], [7.7, 480.0], [7.8, 480.0], [7.9, 481.0], [8.0, 484.0], [8.1, 484.0], [8.2, 488.0], [8.3, 488.0], [8.4, 488.0], [8.5, 488.0], [8.6, 488.0], [8.7, 491.0], [8.8, 491.0], [8.9, 492.0], [9.0, 492.0], [9.1, 492.0], [9.2, 493.0], [9.3, 493.0], [9.4, 494.0], [9.5, 497.0], [9.6, 497.0], [9.7, 498.0], [9.8, 498.0], [9.9, 501.0], [10.0, 504.0], [10.1, 504.0], [10.2, 508.0], [10.3, 508.0], [10.4, 512.0], [10.5, 515.0], [10.6, 515.0], [10.7, 539.0], [10.8, 539.0], [10.9, 542.0], [11.0, 544.0], [11.1, 544.0], [11.2, 548.0], [11.3, 548.0], [11.4, 552.0], [11.5, 552.0], [11.6, 552.0], [11.7, 555.0], [11.8, 555.0], [11.9, 555.0], [12.0, 557.0], [12.1, 557.0], [12.2, 560.0], [12.3, 560.0], [12.4, 561.0], [12.5, 564.0], [12.6, 564.0], [12.7, 568.0], [12.8, 568.0], [12.9, 568.0], [13.0, 571.0], [13.1, 571.0], [13.2, 573.0], [13.3, 573.0], [13.4, 584.0], [13.5, 590.0], [13.6, 590.0], [13.7, 612.0], [13.8, 612.0], [13.9, 627.0], [14.0, 630.0], [14.1, 630.0], [14.2, 630.0], [14.3, 630.0], [14.4, 633.0], [14.5, 641.0], [14.6, 641.0], [14.7, 647.0], [14.8, 647.0], [14.9, 651.0], [15.0, 656.0], [15.1, 656.0], [15.2, 656.0], [15.3, 656.0], [15.4, 658.0], [15.5, 659.0], [15.6, 659.0], [15.7, 661.0], [15.8, 661.0], [15.9, 661.0], [16.0, 664.0], [16.1, 664.0], [16.2, 665.0], [16.3, 665.0], [16.4, 667.0], [16.5, 667.0], [16.6, 667.0], [16.7, 668.0], [16.8, 668.0], [16.9, 670.0], [17.0, 670.0], [17.1, 670.0], [17.2, 671.0], [17.3, 671.0], [17.4, 673.0], [17.5, 674.0], [17.6, 674.0], [17.7, 676.0], [17.8, 676.0], [17.9, 676.0], [18.0, 681.0], [18.1, 681.0], [18.2, 682.0], [18.3, 682.0], [18.4, 684.0], [18.5, 686.0], [18.6, 686.0], [18.7, 690.0], [18.8, 690.0], [18.9, 693.0], [19.0, 696.0], [19.1, 696.0], [19.2, 698.0], [19.3, 698.0], [19.4, 702.0], [19.5, 704.0], [19.6, 704.0], [19.7, 710.0], [19.8, 710.0], [19.9, 712.0], [20.0, 712.0], [20.1, 731.0], [20.2, 732.0], [20.3, 732.0], [20.4, 734.0], [20.5, 734.0], [20.6, 736.0], [20.7, 740.0], [20.8, 740.0], [20.9, 747.0], [21.0, 747.0], [21.1, 749.0], [21.2, 751.0], [21.3, 751.0], [21.4, 753.0], [21.5, 753.0], [21.6, 755.0], [21.7, 757.0], [21.8, 757.0], [21.9, 757.0], [22.0, 757.0], [22.1, 758.0], [22.2, 759.0], [22.3, 759.0], [22.4, 760.0], [22.5, 760.0], [22.6, 762.0], [22.7, 763.0], [22.8, 763.0], [22.9, 764.0], [23.0, 764.0], [23.1, 766.0], [23.2, 771.0], [23.3, 771.0], [23.4, 782.0], [23.5, 782.0], [23.6, 784.0], [23.7, 786.0], [23.8, 786.0], [23.9, 789.0], [24.0, 789.0], [24.1, 793.0], [24.2, 795.0], [24.3, 795.0], [24.4, 796.0], [24.5, 796.0], [24.6, 799.0], [24.7, 805.0], [24.8, 805.0], [24.9, 817.0], [25.0, 817.0], [25.1, 818.0], [25.2, 820.0], [25.3, 820.0], [25.4, 821.0], [25.5, 821.0], [25.6, 823.0], [25.7, 823.0], [25.8, 823.0], [25.9, 824.0], [26.0, 824.0], [26.1, 826.0], [26.2, 827.0], [26.3, 827.0], [26.4, 827.0], [26.5, 827.0], [26.6, 829.0], [26.7, 830.0], [26.8, 830.0], [26.9, 830.0], [27.0, 830.0], [27.1, 831.0], [27.2, 831.0], [27.3, 831.0], [27.4, 832.0], [27.5, 832.0], [27.6, 833.0], [27.7, 834.0], [27.8, 834.0], [27.9, 835.0], [28.0, 835.0], [28.1, 836.0], [28.2, 836.0], [28.3, 836.0], [28.4, 836.0], [28.5, 836.0], [28.6, 837.0], [28.7, 837.0], [28.8, 837.0], [28.9, 838.0], [29.0, 838.0], [29.1, 838.0], [29.2, 839.0], [29.3, 839.0], [29.4, 841.0], [29.5, 841.0], [29.6, 841.0], [29.7, 841.0], [29.8, 841.0], [29.9, 842.0], [30.0, 842.0], [30.1, 842.0], [30.2, 843.0], [30.3, 843.0], [30.4, 844.0], [30.5, 844.0], [30.6, 844.0], [30.7, 845.0], [30.8, 845.0], [30.9, 845.0], [31.0, 845.0], [31.1, 846.0], [31.2, 846.0], [31.3, 846.0], [31.4, 846.0], [31.5, 846.0], [31.6, 848.0], [31.7, 848.0], [31.8, 848.0], [31.9, 848.0], [32.0, 848.0], [32.1, 849.0], [32.2, 850.0], [32.3, 850.0], [32.4, 850.0], [32.5, 850.0], [32.6, 850.0], [32.7, 851.0], [32.8, 851.0], [32.9, 851.0], [33.0, 851.0], [33.1, 851.0], [33.2, 852.0], [33.3, 852.0], [33.4, 853.0], [33.5, 853.0], [33.6, 854.0], [33.7, 856.0], [33.8, 856.0], [33.9, 858.0], [34.0, 858.0], [34.1, 860.0], [34.2, 862.0], [34.3, 862.0], [34.4, 863.0], [34.5, 863.0], [34.6, 867.0], [34.7, 867.0], [34.8, 867.0], [34.9, 870.0], [35.0, 870.0], [35.1, 870.0], [35.2, 870.0], [35.3, 870.0], [35.4, 871.0], [35.5, 871.0], [35.6, 872.0], [35.7, 872.0], [35.8, 872.0], [35.9, 872.0], [36.0, 872.0], [36.1, 873.0], [36.2, 873.0], [36.3, 873.0], [36.4, 874.0], [36.5, 874.0], [36.6, 874.0], [36.7, 874.0], [36.8, 874.0], [36.9, 874.0], [37.0, 874.0], [37.1, 876.0], [37.2, 876.0], [37.3, 876.0], [37.4, 878.0], [37.5, 878.0], [37.6, 878.0], [37.7, 879.0], [37.8, 879.0], [37.9, 880.0], [38.0, 880.0], [38.1, 880.0], [38.2, 882.0], [38.3, 882.0], [38.4, 882.0], [38.5, 882.0], [38.6, 883.0], [38.7, 884.0], [38.8, 884.0], [38.9, 884.0], [39.0, 884.0], [39.1, 885.0], [39.2, 887.0], [39.3, 887.0], [39.4, 888.0], [39.5, 888.0], [39.6, 890.0], [39.7, 890.0], [39.8, 890.0], [39.9, 892.0], [40.0, 892.0], [40.1, 892.0], [40.2, 893.0], [40.3, 893.0], [40.4, 895.0], [40.5, 895.0], [40.6, 896.0], [40.7, 899.0], [40.8, 899.0], [40.9, 899.0], [41.0, 899.0], [41.1, 899.0], [41.2, 900.0], [41.3, 900.0], [41.4, 902.0], [41.5, 902.0], [41.6, 905.0], [41.7, 909.0], [41.8, 909.0], [41.9, 925.0], [42.0, 925.0], [42.1, 972.0], [42.2, 985.0], [42.3, 985.0], [42.4, 1002.0], [42.5, 1033.0], [42.6, 1033.0], [42.7, 1036.0], [42.8, 1036.0], [42.9, 1049.0], [43.0, 1056.0], [43.1, 1056.0], [43.2, 1061.0], [43.3, 1061.0], [43.4, 1065.0], [43.5, 1066.0], [43.6, 1066.0], [43.7, 1066.0], [43.8, 1066.0], [43.9, 1068.0], [44.0, 1068.0], [44.1, 1068.0], [44.2, 1070.0], [44.3, 1070.0], [44.4, 1070.0], [44.5, 1073.0], [44.6, 1073.0], [44.7, 1073.0], [44.8, 1073.0], [44.9, 1074.0], [45.0, 1075.0], [45.1, 1075.0], [45.2, 1075.0], [45.3, 1075.0], [45.4, 1076.0], [45.5, 1077.0], [45.6, 1077.0], [45.7, 1078.0], [45.8, 1078.0], [45.9, 1078.0], [46.0, 1080.0], [46.1, 1080.0], [46.2, 1083.0], [46.3, 1083.0], [46.4, 1084.0], [46.5, 1084.0], [46.6, 1084.0], [46.7, 1084.0], [46.8, 1084.0], [46.9, 1086.0], [47.0, 1088.0], [47.1, 1088.0], [47.2, 1092.0], [47.3, 1092.0], [47.4, 1094.0], [47.5, 1096.0], [47.6, 1096.0], [47.7, 1096.0], [47.8, 1096.0], [47.9, 1098.0], [48.0, 1099.0], [48.1, 1099.0], [48.2, 1100.0], [48.3, 1100.0], [48.4, 1102.0], [48.5, 1102.0], [48.6, 1102.0], [48.7, 1104.0], [48.8, 1104.0], [48.9, 1107.0], [49.0, 1109.0], [49.1, 1109.0], [49.2, 1110.0], [49.3, 1110.0], [49.4, 1110.0], [49.5, 1115.0], [49.6, 1115.0], [49.7, 1115.0], [49.8, 1115.0], [49.9, 1119.0], [50.0, 1145.0], [50.1, 1145.0], [50.2, 1154.0], [50.3, 1154.0], [50.4, 1156.0], [50.5, 1157.0], [50.6, 1157.0], [50.7, 1158.0], [50.8, 1158.0], [50.9, 1160.0], [51.0, 1163.0], [51.1, 1163.0], [51.2, 1165.0], [51.3, 1165.0], [51.4, 1171.0], [51.5, 1173.0], [51.6, 1173.0], [51.7, 1178.0], [51.8, 1178.0], [51.9, 1181.0], [52.0, 1184.0], [52.1, 1184.0], [52.2, 1186.0], [52.3, 1186.0], [52.4, 1188.0], [52.5, 1194.0], [52.6, 1194.0], [52.7, 1195.0], [52.8, 1195.0], [52.9, 1195.0], [53.0, 1198.0], [53.1, 1198.0], [53.2, 1200.0], [53.3, 1200.0], [53.4, 1201.0], [53.5, 1202.0], [53.6, 1202.0], [53.7, 1202.0], [53.8, 1202.0], [53.9, 1204.0], [54.0, 1204.0], [54.1, 1204.0], [54.2, 1204.0], [54.3, 1204.0], [54.4, 1207.0], [54.5, 1207.0], [54.6, 1207.0], [54.7, 1207.0], [54.8, 1207.0], [54.9, 1211.0], [55.0, 1211.0], [55.1, 1211.0], [55.2, 1211.0], [55.3, 1211.0], [55.4, 1213.0], [55.5, 1214.0], [55.6, 1214.0], [55.7, 1214.0], [55.8, 1214.0], [55.9, 1215.0], [56.0, 1217.0], [56.1, 1217.0], [56.2, 1217.0], [56.3, 1217.0], [56.4, 1219.0], [56.5, 1220.0], [56.6, 1220.0], [56.7, 1228.0], [56.8, 1228.0], [56.9, 1229.0], [57.0, 1233.0], [57.1, 1233.0], [57.2, 1234.0], [57.3, 1234.0], [57.4, 1236.0], [57.5, 1236.0], [57.6, 1236.0], [57.7, 1236.0], [57.8, 1236.0], [57.9, 1239.0], [58.0, 1240.0], [58.1, 1240.0], [58.2, 1241.0], [58.3, 1241.0], [58.4, 1242.0], [58.5, 1246.0], [58.6, 1246.0], [58.7, 1255.0], [58.8, 1255.0], [58.9, 1260.0], [59.0, 1263.0], [59.1, 1263.0], [59.2, 1265.0], [59.3, 1265.0], [59.4, 1267.0], [59.5, 1269.0], [59.6, 1269.0], [59.7, 1272.0], [59.8, 1272.0], [59.9, 1277.0], [60.0, 1336.0], [60.1, 1336.0], [60.2, 1339.0], [60.3, 1339.0], [60.4, 1381.0], [60.5, 1409.0], [60.6, 1409.0], [60.7, 1426.0], [60.8, 1426.0], [60.9, 1427.0], [61.0, 1436.0], [61.1, 1436.0], [61.2, 1442.0], [61.3, 1442.0], [61.4, 1444.0], [61.5, 1446.0], [61.6, 1446.0], [61.7, 1446.0], [61.8, 1446.0], [61.9, 1455.0], [62.0, 1495.0], [62.1, 1495.0], [62.2, 1521.0], [62.3, 1521.0], [62.4, 1578.0], [62.5, 1589.0], [62.6, 1589.0], [62.7, 1597.0], [62.8, 1597.0], [62.9, 1599.0], [63.0, 1606.0], [63.1, 1606.0], [63.2, 1615.0], [63.3, 1615.0], [63.4, 1638.0], [63.5, 1644.0], [63.6, 1644.0], [63.7, 1648.0], [63.8, 1648.0], [63.9, 1654.0], [64.0, 1704.0], [64.1, 1704.0], [64.2, 1709.0], [64.3, 1709.0], [64.4, 1736.0], [64.5, 1745.0], [64.6, 1745.0], [64.7, 1745.0], [64.8, 1745.0], [64.9, 1750.0], [65.0, 1757.0], [65.1, 1757.0], [65.2, 1762.0], [65.3, 1762.0], [65.4, 1769.0], [65.5, 1776.0], [65.6, 1776.0], [65.7, 1776.0], [65.8, 1776.0], [65.9, 1778.0], [66.0, 1778.0], [66.1, 1778.0], [66.2, 1780.0], [66.3, 1780.0], [66.4, 1788.0], [66.5, 1803.0], [66.6, 1803.0], [66.7, 1824.0], [66.8, 1824.0], [66.9, 1847.0], [67.0, 1860.0], [67.1, 1860.0], [67.2, 1871.0], [67.3, 1871.0], [67.4, 1877.0], [67.5, 1953.0], [67.6, 1953.0], [67.7, 1955.0], [67.8, 1955.0], [67.9, 1961.0], [68.0, 1969.0], [68.1, 1969.0], [68.2, 1971.0], [68.3, 1971.0], [68.4, 1991.0], [68.5, 1998.0], [68.6, 1998.0], [68.7, 1999.0], [68.8, 1999.0], [68.9, 2056.0], [69.0, 2057.0], [69.1, 2057.0], [69.2, 2059.0], [69.3, 2059.0], [69.4, 2061.0], [69.5, 2092.0], [69.6, 2092.0], [69.7, 2098.0], [69.8, 2098.0], [69.9, 2118.0], [70.0, 2135.0], [70.1, 2135.0], [70.2, 2155.0], [70.3, 2155.0], [70.4, 2156.0], [70.5, 2159.0], [70.6, 2159.0], [70.7, 2167.0], [70.8, 2167.0], [70.9, 2169.0], [71.0, 2173.0], [71.1, 2173.0], [71.2, 2179.0], [71.3, 2179.0], [71.4, 2180.0], [71.5, 2190.0], [71.6, 2190.0], [71.7, 2191.0], [71.8, 2191.0], [71.9, 2195.0], [72.0, 2195.0], [72.1, 2200.0], [72.2, 2206.0], [72.3, 2206.0], [72.4, 2212.0], [72.5, 2212.0], [72.6, 2214.0], [72.7, 2218.0], [72.8, 2218.0], [72.9, 2222.0], [73.0, 2222.0], [73.1, 2226.0], [73.2, 2239.0], [73.3, 2239.0], [73.4, 2241.0], [73.5, 2241.0], [73.6, 2305.0], [73.7, 2321.0], [73.8, 2321.0], [73.9, 2340.0], [74.0, 2340.0], [74.1, 2354.0], [74.2, 2362.0], [74.3, 2362.0], [74.4, 2367.0], [74.5, 2367.0], [74.6, 2370.0], [74.7, 2375.0], [74.8, 2375.0], [74.9, 2378.0], [75.0, 2378.0], [75.1, 2378.0], [75.2, 2382.0], [75.3, 2382.0], [75.4, 2383.0], [75.5, 2383.0], [75.6, 2385.0], [75.7, 2385.0], [75.8, 2385.0], [75.9, 2387.0], [76.0, 2387.0], [76.1, 2393.0], [76.2, 2397.0], [76.3, 2397.0], [76.4, 2397.0], [76.5, 2397.0], [76.6, 2406.0], [76.7, 2421.0], [76.8, 2421.0], [76.9, 2426.0], [77.0, 2426.0], [77.1, 2432.0], [77.2, 2447.0], [77.3, 2447.0], [77.4, 2448.0], [77.5, 2448.0], [77.6, 2449.0], [77.7, 2469.0], [77.8, 2469.0], [77.9, 2476.0], [78.0, 2476.0], [78.1, 2480.0], [78.2, 2485.0], [78.3, 2485.0], [78.4, 2487.0], [78.5, 2487.0], [78.6, 2493.0], [78.7, 2499.0], [78.8, 2499.0], [78.9, 2502.0], [79.0, 2502.0], [79.1, 2511.0], [79.2, 2512.0], [79.3, 2512.0], [79.4, 2517.0], [79.5, 2517.0], [79.6, 2522.0], [79.7, 2523.0], [79.8, 2523.0], [79.9, 2527.0], [80.0, 2527.0], [80.1, 2528.0], [80.2, 2529.0], [80.3, 2529.0], [80.4, 2542.0], [80.5, 2542.0], [80.6, 2549.0], [80.7, 2567.0], [80.8, 2567.0], [80.9, 2578.0], [81.0, 2578.0], [81.1, 2593.0], [81.2, 2596.0], [81.3, 2596.0], [81.4, 2605.0], [81.5, 2605.0], [81.6, 2609.0], [81.7, 2610.0], [81.8, 2610.0], [81.9, 2630.0], [82.0, 2630.0], [82.1, 2631.0], [82.2, 2633.0], [82.3, 2633.0], [82.4, 2634.0], [82.5, 2634.0], [82.6, 2644.0], [82.7, 2703.0], [82.8, 2703.0], [82.9, 2708.0], [83.0, 2708.0], [83.1, 2716.0], [83.2, 2721.0], [83.3, 2721.0], [83.4, 2737.0], [83.5, 2737.0], [83.6, 2744.0], [83.7, 2746.0], [83.8, 2746.0], [83.9, 2746.0], [84.0, 2746.0], [84.1, 2754.0], [84.2, 2756.0], [84.3, 2756.0], [84.4, 2766.0], [84.5, 2766.0], [84.6, 2773.0], [84.7, 2786.0], [84.8, 2786.0], [84.9, 2799.0], [85.0, 2799.0], [85.1, 2805.0], [85.2, 2808.0], [85.3, 2808.0], [85.4, 2814.0], [85.5, 2814.0], [85.6, 2817.0], [85.7, 2836.0], [85.8, 2836.0], [85.9, 2840.0], [86.0, 2840.0], [86.1, 2843.0], [86.2, 2849.0], [86.3, 2849.0], [86.4, 2852.0], [86.5, 2852.0], [86.6, 2854.0], [86.7, 2857.0], [86.8, 2857.0], [86.9, 2859.0], [87.0, 2859.0], [87.1, 2862.0], [87.2, 2873.0], [87.3, 2873.0], [87.4, 2879.0], [87.5, 2879.0], [87.6, 2886.0], [87.7, 2890.0], [87.8, 2890.0], [87.9, 2891.0], [88.0, 2891.0], [88.1, 2896.0], [88.2, 2900.0], [88.3, 2900.0], [88.4, 2904.0], [88.5, 2904.0], [88.6, 2906.0], [88.7, 2907.0], [88.8, 2907.0], [88.9, 2911.0], [89.0, 2911.0], [89.1, 2912.0], [89.2, 2917.0], [89.3, 2917.0], [89.4, 2917.0], [89.5, 2917.0], [89.6, 2917.0], [89.7, 2926.0], [89.8, 2926.0], [89.9, 2927.0], [90.0, 2927.0], [90.1, 2939.0], [90.2, 2948.0], [90.3, 2948.0], [90.4, 2949.0], [90.5, 2949.0], [90.6, 2950.0], [90.7, 2951.0], [90.8, 2951.0], [90.9, 2961.0], [91.0, 2961.0], [91.1, 2962.0], [91.2, 2962.0], [91.3, 2962.0], [91.4, 2963.0], [91.5, 2963.0], [91.6, 2969.0], [91.7, 2970.0], [91.8, 2970.0], [91.9, 2977.0], [92.0, 2977.0], [92.1, 2978.0], [92.2, 2981.0], [92.3, 2981.0], [92.4, 2985.0], [92.5, 2985.0], [92.6, 2990.0], [92.7, 2992.0], [92.8, 2992.0], [92.9, 3048.0], [93.0, 3048.0], [93.1, 3049.0], [93.2, 3054.0], [93.3, 3054.0], [93.4, 3067.0], [93.5, 3067.0], [93.6, 3070.0], [93.7, 3080.0], [93.8, 3080.0], [93.9, 3087.0], [94.0, 3087.0], [94.1, 3096.0], [94.2, 3098.0], [94.3, 3098.0], [94.4, 3102.0], [94.5, 3102.0], [94.6, 3110.0], [94.7, 3123.0], [94.8, 3123.0], [94.9, 3124.0], [95.0, 3124.0], [95.1, 3153.0], [95.2, 3177.0], [95.3, 3177.0], [95.4, 3181.0], [95.5, 3181.0], [95.6, 3281.0], [95.7, 3332.0], [95.8, 3332.0], [95.9, 3401.0], [96.0, 3401.0], [96.1, 3404.0], [96.2, 3414.0], [96.3, 3414.0], [96.4, 3632.0], [96.5, 3632.0], [96.6, 3666.0], [96.7, 4039.0], [96.8, 4039.0], [96.9, 4248.0], [97.0, 4248.0], [97.1, 4274.0], [97.2, 4281.0], [97.3, 4281.0], [97.4, 4353.0], [97.5, 4353.0], [97.6, 4361.0], [97.7, 4372.0], [97.8, 4372.0], [97.9, 4384.0], [98.0, 4384.0], [98.1, 4401.0], [98.2, 4471.0], [98.3, 4471.0], [98.4, 4475.0], [98.5, 4475.0], [98.6, 4477.0], [98.7, 4479.0], [98.8, 4479.0], [98.9, 4481.0], [99.0, 4481.0], [99.1, 4482.0], [99.2, 4485.0], [99.3, 4485.0], [99.4, 4656.0], [99.5, 4656.0], [99.6, 4886.0], [99.7, 4914.0], [99.8, 4914.0], [99.9, 4932.0], [100.0, 4932.0]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[0.0, 34.0], [0.1, 34.0], [0.2, 37.0], [0.3, 37.0], [0.4, 56.0], [0.5, 56.0], [0.6, 56.0], [0.7, 63.0], [0.8, 63.0], [0.9, 63.0], [1.0, 68.0], [1.1, 68.0], [1.2, 68.0], [1.3, 68.0], [1.4, 72.0], [1.5, 77.0], [1.6, 77.0], [1.7, 82.0], [1.8, 82.0], [1.9, 86.0], [2.0, 87.0], [2.1, 87.0], [2.2, 92.0], [2.3, 92.0], [2.4, 97.0], [2.5, 99.0], [2.6, 99.0], [2.7, 102.0], [2.8, 102.0], [2.9, 105.0], [3.0, 107.0], [3.1, 107.0], [3.2, 109.0], [3.3, 109.0], [3.4, 113.0], [3.5, 116.0], [3.6, 116.0], [3.7, 117.0], [3.8, 117.0], [3.9, 123.0], [4.0, 124.0], [4.1, 124.0], [4.2, 129.0], [4.3, 129.0], [4.4, 141.0], [4.5, 156.0], [4.6, 156.0], [4.7, 156.0], [4.8, 156.0], [4.9, 160.0], [5.0, 162.0], [5.1, 162.0], [5.2, 211.0], [5.3, 211.0], [5.4, 216.0], [5.5, 235.0], [5.6, 235.0], [5.7, 235.0], [5.8, 235.0], [5.9, 239.0], [6.0, 243.0], [6.1, 243.0], [6.2, 243.0], [6.3, 243.0], [6.4, 246.0], [6.5, 247.0], [6.6, 247.0], [6.7, 255.0], [6.8, 255.0], [6.9, 258.0], [7.0, 258.0], [7.1, 268.0], [7.2, 270.0], [7.3, 270.0], [7.4, 271.0], [7.5, 271.0], [7.6, 274.0], [7.7, 279.0], [7.8, 279.0], [7.9, 280.0], [8.0, 280.0], [8.1, 284.0], [8.2, 289.0], [8.3, 289.0], [8.4, 290.0], [8.5, 292.0], [8.6, 292.0], [8.7, 293.0], [8.8, 293.0], [8.9, 301.0], [9.0, 301.0], [9.1, 301.0], [9.2, 303.0], [9.3, 303.0], [9.4, 306.0], [9.5, 306.0], [9.6, 306.0], [9.7, 309.0], [9.8, 309.0], [9.9, 312.0], [10.0, 315.0], [10.1, 315.0], [10.2, 315.0], [10.3, 315.0], [10.4, 325.0], [10.5, 377.0], [10.6, 377.0], [10.7, 379.0], [10.8, 379.0], [10.9, 383.0], [11.0, 394.0], [11.1, 394.0], [11.2, 395.0], [11.3, 395.0], [11.4, 396.0], [11.5, 403.0], [11.6, 403.0], [11.7, 406.0], [11.8, 406.0], [11.9, 406.0], [12.0, 417.0], [12.1, 417.0], [12.2, 419.0], [12.3, 419.0], [12.4, 420.0], [12.5, 421.0], [12.6, 421.0], [12.7, 423.0], [12.8, 423.0], [12.9, 430.0], [13.0, 430.0], [13.1, 430.0], [13.2, 434.0], [13.3, 434.0], [13.4, 440.0], [13.5, 443.0], [13.6, 443.0], [13.7, 448.0], [13.8, 448.0], [13.9, 451.0], [14.0, 455.0], [14.1, 455.0], [14.2, 455.0], [14.3, 455.0], [14.4, 457.0], [14.5, 460.0], [14.6, 460.0], [14.7, 471.0], [14.8, 471.0], [14.9, 473.0], [15.0, 478.0], [15.1, 478.0], [15.2, 478.0], [15.3, 478.0], [15.4, 487.0], [15.5, 489.0], [15.6, 489.0], [15.7, 492.0], [15.8, 492.0], [15.9, 557.0], [16.0, 562.0], [16.1, 562.0], [16.2, 563.0], [16.3, 563.0], [16.4, 566.0], [16.5, 570.0], [16.6, 570.0], [16.7, 571.0], [16.8, 571.0], [16.9, 578.0], [17.0, 587.0], [17.1, 587.0], [17.2, 597.0], [17.3, 597.0], [17.4, 598.0], [17.5, 600.0], [17.6, 600.0], [17.7, 605.0], [17.8, 605.0], [17.9, 611.0], [18.0, 612.0], [18.1, 612.0], [18.2, 613.0], [18.3, 613.0], [18.4, 613.0], [18.5, 616.0], [18.6, 616.0], [18.7, 616.0], [18.8, 616.0], [18.9, 616.0], [19.0, 618.0], [19.1, 618.0], [19.2, 619.0], [19.3, 619.0], [19.4, 619.0], [19.5, 621.0], [19.6, 621.0], [19.7, 621.0], [19.8, 621.0], [19.9, 621.0], [20.0, 621.0], [20.1, 621.0], [20.2, 628.0], [20.3, 628.0], [20.4, 628.0], [20.5, 629.0], [20.6, 629.0], [20.7, 630.0], [20.8, 630.0], [20.9, 637.0], [21.0, 637.0], [21.1, 640.0], [21.2, 711.0], [21.3, 711.0], [21.4, 713.0], [21.5, 713.0], [21.6, 717.0], [21.7, 717.0], [21.8, 717.0], [21.9, 719.0], [22.0, 719.0], [22.1, 719.0], [22.2, 725.0], [22.3, 725.0], [22.4, 732.0], [22.5, 732.0], [22.6, 733.0], [22.7, 735.0], [22.8, 735.0], [22.9, 738.0], [23.0, 738.0], [23.1, 738.0], [23.2, 740.0], [23.3, 740.0], [23.4, 741.0], [23.5, 741.0], [23.6, 741.0], [23.7, 742.0], [23.8, 742.0], [23.9, 742.0], [24.0, 742.0], [24.1, 742.0], [24.2, 744.0], [24.3, 744.0], [24.4, 745.0], [24.5, 745.0], [24.6, 746.0], [24.7, 746.0], [24.8, 746.0], [24.9, 746.0], [25.0, 746.0], [25.1, 747.0], [25.2, 747.0], [25.3, 747.0], [25.4, 748.0], [25.5, 748.0], [25.6, 749.0], [25.7, 751.0], [25.8, 751.0], [25.9, 751.0], [26.0, 751.0], [26.1, 752.0], [26.2, 753.0], [26.3, 753.0], [26.4, 753.0], [26.5, 753.0], [26.6, 842.0], [26.7, 843.0], [26.8, 843.0], [26.9, 844.0], [27.0, 844.0], [27.1, 844.0], [27.2, 846.0], [27.3, 846.0], [27.4, 847.0], [27.5, 847.0], [27.6, 847.0], [27.7, 847.0], [27.8, 847.0], [27.9, 848.0], [28.0, 848.0], [28.1, 849.0], [28.2, 851.0], [28.3, 851.0], [28.4, 851.0], [28.5, 851.0], [28.6, 851.0], [28.7, 851.0], [28.8, 851.0], [28.9, 852.0], [29.0, 852.0], [29.1, 852.0], [29.2, 853.0], [29.3, 853.0], [29.4, 854.0], [29.5, 854.0], [29.6, 856.0], [29.7, 856.0], [29.8, 856.0], [29.9, 857.0], [30.0, 857.0], [30.1, 858.0], [30.2, 858.0], [30.3, 858.0], [30.4, 858.0], [30.5, 858.0], [30.6, 859.0], [30.7, 860.0], [30.8, 860.0], [30.9, 860.0], [31.0, 860.0], [31.1, 861.0], [31.2, 862.0], [31.3, 862.0], [31.4, 862.0], [31.5, 862.0], [31.6, 863.0], [31.7, 863.0], [31.8, 863.0], [31.9, 945.0], [32.0, 945.0], [32.1, 945.0], [32.2, 947.0], [32.3, 947.0], [32.4, 947.0], [32.5, 947.0], [32.6, 947.0], [32.7, 947.0], [32.8, 947.0], [32.9, 948.0], [33.0, 948.0], [33.1, 948.0], [33.2, 948.0], [33.3, 948.0], [33.4, 948.0], [33.5, 948.0], [33.6, 948.0], [33.7, 948.0], [33.8, 948.0], [33.9, 949.0], [34.0, 949.0], [34.1, 949.0], [34.2, 949.0], [34.3, 949.0], [34.4, 950.0], [34.5, 950.0], [34.6, 950.0], [34.7, 950.0], [34.8, 950.0], [34.9, 950.0], [35.0, 950.0], [35.1, 951.0], [35.2, 951.0], [35.3, 951.0], [35.4, 951.0], [35.5, 951.0], [35.6, 951.0], [35.7, 951.0], [35.8, 951.0], [35.9, 952.0], [36.0, 952.0], [36.1, 952.0], [36.2, 953.0], [36.3, 953.0], [36.4, 953.0], [36.5, 953.0], [36.6, 953.0], [36.7, 953.0], [36.8, 953.0], [36.9, 954.0], [37.0, 954.0], [37.1, 954.0], [37.2, 1061.0], [37.3, 1061.0], [37.4, 1062.0], [37.5, 1062.0], [37.6, 1064.0], [37.7, 1064.0], [37.8, 1064.0], [37.9, 1065.0], [38.0, 1065.0], [38.1, 1066.0], [38.2, 1067.0], [38.3, 1067.0], [38.4, 1068.0], [38.5, 1068.0], [38.6, 1068.0], [38.7, 1069.0], [38.8, 1069.0], [38.9, 1069.0], [39.0, 1069.0], [39.1, 1069.0], [39.2, 1069.0], [39.3, 1069.0], [39.4, 1070.0], [39.5, 1070.0], [39.6, 1071.0], [39.7, 1072.0], [39.8, 1072.0], [39.9, 1073.0], [40.0, 1075.0], [40.1, 1075.0], [40.2, 1076.0], [40.3, 1076.0], [40.4, 1078.0], [40.5, 1081.0], [40.6, 1081.0], [40.7, 1084.0], [40.8, 1084.0], [40.9, 1085.0], [41.0, 1086.0], [41.1, 1086.0], [41.2, 1151.0], [41.3, 1151.0], [41.4, 1151.0], [41.5, 1152.0], [41.6, 1152.0], [41.7, 1153.0], [41.8, 1153.0], [41.9, 1153.0], [42.0, 1155.0], [42.1, 1155.0], [42.2, 1155.0], [42.3, 1155.0], [42.4, 1156.0], [42.5, 1157.0], [42.6, 1157.0], [42.7, 1157.0], [42.8, 1157.0], [42.9, 1158.0], [43.0, 1158.0], [43.1, 1158.0], [43.2, 1158.0], [43.3, 1158.0], [43.4, 1159.0], [43.5, 1159.0], [43.6, 1159.0], [43.7, 1159.0], [43.8, 1159.0], [43.9, 1159.0], [44.0, 1159.0], [44.1, 1159.0], [44.2, 1163.0], [44.3, 1163.0], [44.4, 1164.0], [44.5, 1165.0], [44.6, 1165.0], [44.7, 1165.0], [44.8, 1165.0], [44.9, 1165.0], [45.0, 1165.0], [45.1, 1165.0], [45.2, 1165.0], [45.3, 1165.0], [45.4, 1165.0], [45.5, 1165.0], [45.6, 1165.0], [45.7, 1166.0], [45.8, 1166.0], [45.9, 1166.0], [46.0, 1167.0], [46.1, 1167.0], [46.2, 1167.0], [46.3, 1167.0], [46.4, 1169.0], [46.5, 1211.0], [46.6, 1211.0], [46.7, 1211.0], [46.8, 1211.0], [46.9, 1214.0], [47.0, 1216.0], [47.1, 1216.0], [47.2, 1217.0], [47.3, 1217.0], [47.4, 1220.0], [47.5, 1244.0], [47.6, 1244.0], [47.7, 1244.0], [47.8, 1244.0], [47.9, 1245.0], [48.0, 1246.0], [48.1, 1246.0], [48.2, 1247.0], [48.3, 1247.0], [48.4, 1247.0], [48.5, 1247.0], [48.6, 1247.0], [48.7, 1247.0], [48.8, 1247.0], [48.9, 1247.0], [49.0, 1248.0], [49.1, 1248.0], [49.2, 1248.0], [49.3, 1248.0], [49.4, 1249.0], [49.5, 1250.0], [49.6, 1250.0], [49.7, 1250.0], [49.8, 1250.0], [49.9, 1253.0], [50.0, 1253.0], [50.1, 1253.0], [50.2, 1257.0], [50.3, 1257.0], [50.4, 1257.0], [50.5, 1257.0], [50.6, 1257.0], [50.7, 1258.0], [50.8, 1258.0], [50.9, 1258.0], [51.0, 1258.0], [51.1, 1258.0], [51.2, 1258.0], [51.3, 1258.0], [51.4, 1259.0], [51.5, 1259.0], [51.6, 1259.0], [51.7, 1259.0], [51.8, 1259.0], [51.9, 1259.0], [52.0, 1259.0], [52.1, 1259.0], [52.2, 1259.0], [52.3, 1259.0], [52.4, 1260.0], [52.5, 1260.0], [52.6, 1260.0], [52.7, 1260.0], [52.8, 1260.0], [52.9, 1260.0], [53.0, 1261.0], [53.1, 1261.0], [53.2, 1261.0], [53.3, 1261.0], [53.4, 1261.0], [53.5, 1261.0], [53.6, 1261.0], [53.7, 1261.0], [53.8, 1261.0], [53.9, 1262.0], [54.0, 1263.0], [54.1, 1263.0], [54.2, 1334.0], [54.3, 1334.0], [54.4, 1336.0], [54.5, 1337.0], [54.6, 1337.0], [54.7, 1337.0], [54.8, 1337.0], [54.9, 1339.0], [55.0, 1343.0], [55.1, 1343.0], [55.2, 1345.0], [55.3, 1345.0], [55.4, 1345.0], [55.5, 1346.0], [55.6, 1346.0], [55.7, 1346.0], [55.8, 1346.0], [55.9, 1348.0], [56.0, 1348.0], [56.1, 1348.0], [56.2, 1349.0], [56.3, 1349.0], [56.4, 1349.0], [56.5, 1349.0], [56.6, 1349.0], [56.7, 1349.0], [56.8, 1349.0], [56.9, 1350.0], [57.0, 1350.0], [57.1, 1350.0], [57.2, 1350.0], [57.3, 1350.0], [57.4, 1350.0], [57.5, 1351.0], [57.6, 1351.0], [57.7, 1351.0], [57.8, 1351.0], [57.9, 1351.0], [58.0, 1351.0], [58.1, 1351.0], [58.2, 1352.0], [58.3, 1352.0], [58.4, 1352.0], [58.5, 1352.0], [58.6, 1352.0], [58.7, 1353.0], [58.8, 1353.0], [58.9, 1354.0], [59.0, 1354.0], [59.1, 1354.0], [59.2, 1355.0], [59.3, 1355.0], [59.4, 1355.0], [59.5, 1356.0], [59.6, 1356.0], [59.7, 1357.0], [59.8, 1357.0], [59.9, 1357.0], [60.0, 1357.0], [60.1, 1357.0], [60.2, 1358.0], [60.3, 1358.0], [60.4, 1358.0], [60.5, 1358.0], [60.6, 1358.0], [60.7, 1358.0], [60.8, 1358.0], [60.9, 1359.0], [61.0, 1360.0], [61.1, 1360.0], [61.2, 1360.0], [61.3, 1360.0], [61.4, 1361.0], [61.5, 1362.0], [61.6, 1362.0], [61.7, 1362.0], [61.8, 1362.0], [61.9, 1362.0], [62.0, 1362.0], [62.1, 1362.0], [62.2, 1363.0], [62.3, 1363.0], [62.4, 1364.0], [62.5, 1367.0], [62.6, 1367.0], [62.7, 1370.0], [62.8, 1370.0], [62.9, 1468.0], [63.0, 1524.0], [63.1, 1524.0], [63.2, 1526.0], [63.3, 1526.0], [63.4, 1528.0], [63.5, 1530.0], [63.6, 1530.0], [63.7, 1533.0], [63.8, 1533.0], [63.9, 1537.0], [64.0, 1540.0], [64.1, 1540.0], [64.2, 1544.0], [64.3, 1544.0], [64.4, 1548.0], [64.5, 1550.0], [64.6, 1550.0], [64.7, 1552.0], [64.8, 1552.0], [64.9, 1554.0], [65.0, 1556.0], [65.1, 1556.0], [65.2, 1815.0], [65.3, 1815.0], [65.4, 1816.0], [65.5, 1820.0], [65.6, 1820.0], [65.7, 1826.0], [65.8, 1826.0], [65.9, 1947.0], [66.0, 1947.0], [66.1, 1947.0], [66.2, 1948.0], [66.3, 1948.0], [66.4, 1951.0], [66.5, 1951.0], [66.6, 1951.0], [66.7, 1952.0], [66.8, 1952.0], [66.9, 1952.0], [67.0, 1952.0], [67.1, 1952.0], [67.2, 1953.0], [67.3, 1953.0], [67.4, 1953.0], [67.5, 1954.0], [67.6, 1954.0], [67.7, 1955.0], [67.8, 1955.0], [67.9, 1955.0], [68.0, 1956.0], [68.1, 1956.0], [68.2, 1956.0], [68.3, 1956.0], [68.4, 1956.0], [68.5, 1956.0], [68.6, 1956.0], [68.7, 1956.0], [68.8, 1956.0], [68.9, 1957.0], [69.0, 1957.0], [69.1, 1957.0], [69.2, 1958.0], [69.3, 1958.0], [69.4, 1959.0], [69.5, 1959.0], [69.6, 1959.0], [69.7, 1960.0], [69.8, 1960.0], [69.9, 1960.0], [70.0, 1960.0], [70.1, 1960.0], [70.2, 1960.0], [70.3, 1960.0], [70.4, 1961.0], [70.5, 1961.0], [70.6, 1961.0], [70.7, 1963.0], [70.8, 1963.0], [70.9, 1973.0], [71.0, 1981.0], [71.1, 1981.0], [71.2, 1983.0], [71.3, 1983.0], [71.4, 1983.0], [71.5, 1985.0], [71.6, 1985.0], [71.7, 1986.0], [71.8, 1986.0], [71.9, 1986.0], [72.0, 1987.0], [72.1, 1987.0], [72.2, 1992.0], [72.3, 1992.0], [72.4, 1993.0], [72.5, 2071.0], [72.6, 2071.0], [72.7, 2072.0], [72.8, 2072.0], [72.9, 2073.0], [73.0, 2074.0], [73.1, 2074.0], [73.2, 2074.0], [73.3, 2074.0], [73.4, 2076.0], [73.5, 2076.0], [73.6, 2076.0], [73.7, 2077.0], [73.8, 2077.0], [73.9, 2077.0], [74.0, 2078.0], [74.1, 2078.0], [74.2, 2078.0], [74.3, 2078.0], [74.4, 2079.0], [74.5, 2079.0], [74.6, 2079.0], [74.7, 2079.0], [74.8, 2079.0], [74.9, 2081.0], [75.0, 2082.0], [75.1, 2082.0], [75.2, 2082.0], [75.3, 2082.0], [75.4, 2082.0], [75.5, 2082.0], [75.6, 2082.0], [75.7, 2083.0], [75.8, 2083.0], [75.9, 2083.0], [76.0, 2083.0], [76.1, 2083.0], [76.2, 2083.0], [76.3, 2083.0], [76.4, 2084.0], [76.5, 2085.0], [76.6, 2085.0], [76.7, 2085.0], [76.8, 2085.0], [76.9, 2086.0], [77.0, 2087.0], [77.1, 2087.0], [77.2, 2088.0], [77.3, 2088.0], [77.4, 2089.0], [77.5, 2089.0], [77.6, 2089.0], [77.7, 2090.0], [77.8, 2090.0], [77.9, 2091.0], [78.0, 2091.0], [78.1, 2092.0], [78.2, 2093.0], [78.3, 2093.0], [78.4, 2096.0], [78.5, 2096.0], [78.6, 2097.0], [78.7, 2097.0], [78.8, 2097.0], [78.9, 2097.0], [79.0, 2097.0], [79.1, 2102.0], [79.2, 2187.0], [79.3, 2187.0], [79.4, 2188.0], [79.5, 2188.0], [79.6, 2190.0], [79.7, 2190.0], [79.8, 2190.0], [79.9, 2192.0], [80.0, 2192.0], [80.1, 2192.0], [80.2, 2192.0], [80.3, 2192.0], [80.4, 2195.0], [80.5, 2195.0], [80.6, 2198.0], [80.7, 2198.0], [80.8, 2198.0], [80.9, 2200.0], [81.0, 2200.0], [81.1, 2200.0], [81.2, 2200.0], [81.3, 2200.0], [81.4, 2205.0], [81.5, 2205.0], [81.6, 2206.0], [81.7, 2210.0], [81.8, 2210.0], [81.9, 2210.0], [82.0, 2210.0], [82.1, 2211.0], [82.2, 2211.0], [82.3, 2211.0], [82.4, 2212.0], [82.5, 2212.0], [82.6, 2218.0], [82.7, 2222.0], [82.8, 2222.0], [82.9, 2223.0], [83.0, 2223.0], [83.1, 2225.0], [83.2, 2397.0], [83.3, 2397.0], [83.4, 2403.0], [83.5, 2403.0], [83.6, 2405.0], [83.7, 2406.0], [83.8, 2406.0], [83.9, 2407.0], [84.0, 2407.0], [84.1, 2407.0], [84.2, 2409.0], [84.3, 2409.0], [84.4, 2413.0], [84.5, 2413.0], [84.6, 2413.0], [84.7, 2415.0], [84.8, 2415.0], [84.9, 2419.0], [85.0, 2419.0], [85.1, 2526.0], [85.2, 2528.0], [85.3, 2528.0], [85.4, 2528.0], [85.5, 2528.0], [85.6, 2528.0], [85.7, 2529.0], [85.8, 2529.0], [85.9, 2530.0], [86.0, 2530.0], [86.1, 2530.0], [86.2, 2531.0], [86.3, 2531.0], [86.4, 2531.0], [86.5, 2531.0], [86.6, 2531.0], [86.7, 2532.0], [86.8, 2532.0], [86.9, 2533.0], [87.0, 2533.0], [87.1, 2533.0], [87.2, 2535.0], [87.3, 2535.0], [87.4, 2535.0], [87.5, 2535.0], [87.6, 2535.0], [87.7, 2536.0], [87.8, 2536.0], [87.9, 2537.0], [88.0, 2537.0], [88.1, 2541.0], [88.2, 2546.0], [88.3, 2546.0], [88.4, 2560.0], [88.5, 2560.0], [88.6, 2564.0], [88.7, 2565.0], [88.8, 2565.0], [88.9, 2567.0], [89.0, 2567.0], [89.1, 2588.0], [89.2, 2589.0], [89.3, 2589.0], [89.4, 2591.0], [89.5, 2591.0], [89.6, 2597.0], [89.7, 2646.0], [89.8, 2646.0], [89.9, 2649.0], [90.0, 2649.0], [90.1, 2658.0], [90.2, 2659.0], [90.3, 2659.0], [90.4, 2660.0], [90.5, 2660.0], [90.6, 2661.0], [90.7, 2662.0], [90.8, 2662.0], [90.9, 2666.0], [91.0, 2666.0], [91.1, 2670.0], [91.2, 2671.0], [91.3, 2671.0], [91.4, 2677.0], [91.5, 2677.0], [91.6, 2683.0], [91.7, 2688.0], [91.8, 2688.0], [91.9, 2689.0], [92.0, 2689.0], [92.1, 2689.0], [92.2, 2698.0], [92.3, 2698.0], [92.4, 2700.0], [92.5, 2700.0], [92.6, 2702.0], [92.7, 2704.0], [92.8, 2704.0], [92.9, 2704.0], [93.0, 2704.0], [93.1, 2704.0], [93.2, 2705.0], [93.3, 2705.0], [93.4, 2713.0], [93.5, 2713.0], [93.6, 2714.0], [93.7, 2716.0], [93.8, 2716.0], [93.9, 2731.0], [94.0, 2731.0], [94.1, 2734.0], [94.2, 2736.0], [94.3, 2736.0], [94.4, 3074.0], [94.5, 3074.0], [94.6, 3074.0], [94.7, 3076.0], [94.8, 3076.0], [94.9, 3087.0], [95.0, 3087.0], [95.1, 3094.0], [95.2, 3176.0], [95.3, 3176.0], [95.4, 3180.0], [95.5, 3180.0], [95.6, 3181.0], [95.7, 3185.0], [95.8, 3185.0], [95.9, 3197.0], [96.0, 3197.0], [96.1, 3197.0], [96.2, 3202.0], [96.3, 3202.0], [96.4, 3203.0], [96.5, 3203.0], [96.6, 3206.0], [96.7, 3207.0], [96.8, 3207.0], [96.9, 3209.0], [97.0, 3209.0], [97.1, 3210.0], [97.2, 3212.0], [97.3, 3212.0], [97.4, 3214.0], [97.5, 3214.0], [97.6, 3215.0], [97.7, 3216.0], [97.8, 3216.0], [97.9, 3218.0], [98.0, 3218.0], [98.1, 3315.0], [98.2, 3317.0], [98.3, 3317.0], [98.4, 3319.0], [98.5, 3319.0], [98.6, 3321.0], [98.7, 3322.0], [98.8, 3322.0], [98.9, 3323.0], [99.0, 3323.0], [99.1, 3323.0], [99.2, 3325.0], [99.3, 3325.0], [99.4, 3328.0], [99.5, 3328.0], [99.6, 3329.0], [99.7, 3332.0], [99.8, 3332.0], [99.9, 3335.0], [100.0, 3335.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 182.0], [0.1, 182.0], [0.2, 182.0], [0.3, 182.0], [0.4, 182.0], [0.5, 183.0], [0.6, 183.0], [0.7, 183.0], [0.8, 183.0], [0.9, 183.0], [1.0, 183.0], [1.1, 183.0], [1.2, 183.0], [1.3, 183.0], [1.4, 183.0], [1.5, 184.0], [1.6, 184.0], [1.7, 184.0], [1.8, 184.0], [1.9, 185.0], [2.0, 185.0], [2.1, 185.0], [2.2, 185.0], [2.3, 185.0], [2.4, 185.0], [2.5, 185.0], [2.6, 185.0], [2.7, 196.0], [2.8, 196.0], [2.9, 196.0], [3.0, 197.0], [3.1, 197.0], [3.2, 197.0], [3.3, 197.0], [3.4, 197.0], [3.5, 197.0], [3.6, 197.0], [3.7, 197.0], [3.8, 197.0], [3.9, 197.0], [4.0, 197.0], [4.1, 197.0], [4.2, 197.0], [4.3, 197.0], [4.4, 197.0], [4.5, 197.0], [4.6, 197.0], [4.7, 197.0], [4.8, 197.0], [4.9, 197.0], [5.0, 197.0], [5.1, 197.0], [5.2, 197.0], [5.3, 197.0], [5.4, 197.0], [5.5, 197.0], [5.6, 197.0], [5.7, 198.0], [5.8, 198.0], [5.9, 198.0], [6.0, 198.0], [6.1, 198.0], [6.2, 198.0], [6.3, 198.0], [6.4, 198.0], [6.5, 198.0], [6.6, 198.0], [6.7, 198.0], [6.8, 198.0], [6.9, 198.0], [7.0, 198.0], [7.1, 198.0], [7.2, 198.0], [7.3, 198.0], [7.4, 198.0], [7.5, 198.0], [7.6, 198.0], [7.7, 198.0], [7.8, 198.0], [7.9, 198.0], [8.0, 198.0], [8.1, 198.0], [8.2, 199.0], [8.3, 199.0], [8.4, 199.0], [8.5, 199.0], [8.6, 199.0], [8.7, 199.0], [8.8, 199.0], [8.9, 199.0], [9.0, 199.0], [9.1, 199.0], [9.2, 199.0], [9.3, 199.0], [9.4, 199.0], [9.5, 199.0], [9.6, 199.0], [9.7, 199.0], [9.8, 199.0], [9.9, 199.0], [10.0, 199.0], [10.1, 199.0], [10.2, 199.0], [10.3, 199.0], [10.4, 200.0], [10.5, 200.0], [10.6, 200.0], [10.7, 200.0], [10.8, 200.0], [10.9, 200.0], [11.0, 200.0], [11.1, 200.0], [11.2, 200.0], [11.3, 200.0], [11.4, 200.0], [11.5, 200.0], [11.6, 200.0], [11.7, 200.0], [11.8, 200.0], [11.9, 200.0], [12.0, 200.0], [12.1, 200.0], [12.2, 200.0], [12.3, 200.0], [12.4, 200.0], [12.5, 200.0], [12.6, 200.0], [12.7, 200.0], [12.8, 200.0], [12.9, 200.0], [13.0, 200.0], [13.1, 200.0], [13.2, 200.0], [13.3, 200.0], [13.4, 200.0], [13.5, 200.0], [13.6, 200.0], [13.7, 200.0], [13.8, 200.0], [13.9, 200.0], [14.0, 200.0], [14.1, 200.0], [14.2, 201.0], [14.3, 201.0], [14.4, 201.0], [14.5, 201.0], [14.6, 201.0], [14.7, 201.0], [14.8, 201.0], [14.9, 201.0], [15.0, 212.0], [15.1, 212.0], [15.2, 212.0], [15.3, 212.0], [15.4, 212.0], [15.5, 213.0], [15.6, 213.0], [15.7, 213.0], [15.8, 213.0], [15.9, 213.0], [16.0, 213.0], [16.1, 213.0], [16.2, 213.0], [16.3, 213.0], [16.4, 213.0], [16.5, 213.0], [16.6, 213.0], [16.7, 213.0], [16.8, 213.0], [16.9, 213.0], [17.0, 213.0], [17.1, 213.0], [17.2, 213.0], [17.3, 213.0], [17.4, 213.0], [17.5, 213.0], [17.6, 213.0], [17.7, 213.0], [17.8, 213.0], [17.9, 213.0], [18.0, 213.0], [18.1, 213.0], [18.2, 213.0], [18.3, 213.0], [18.4, 213.0], [18.5, 213.0], [18.6, 213.0], [18.7, 213.0], [18.8, 213.0], [18.9, 213.0], [19.0, 213.0], [19.1, 213.0], [19.2, 213.0], [19.3, 213.0], [19.4, 214.0], [19.5, 214.0], [19.6, 214.0], [19.7, 214.0], [19.8, 214.0], [19.9, 214.0], [20.0, 214.0], [20.1, 214.0], [20.2, 214.0], [20.3, 214.0], [20.4, 214.0], [20.5, 214.0], [20.6, 214.0], [20.7, 214.0], [20.8, 214.0], [20.9, 214.0], [21.0, 214.0], [21.1, 214.0], [21.2, 214.0], [21.3, 214.0], [21.4, 214.0], [21.5, 214.0], [21.6, 214.0], [21.7, 214.0], [21.8, 214.0], [21.9, 214.0], [22.0, 214.0], [22.1, 214.0], [22.2, 214.0], [22.3, 214.0], [22.4, 214.0], [22.5, 214.0], [22.6, 214.0], [22.7, 214.0], [22.8, 214.0], [22.9, 214.0], [23.0, 214.0], [23.1, 214.0], [23.2, 214.0], [23.3, 214.0], [23.4, 214.0], [23.5, 214.0], [23.6, 214.0], [23.7, 215.0], [23.8, 215.0], [23.9, 215.0], [24.0, 215.0], [24.1, 215.0], [24.2, 215.0], [24.3, 215.0], [24.4, 215.0], [24.5, 215.0], [24.6, 215.0], [24.7, 215.0], [24.8, 215.0], [24.9, 215.0], [25.0, 215.0], [25.1, 215.0], [25.2, 215.0], [25.3, 215.0], [25.4, 215.0], [25.5, 215.0], [25.6, 215.0], [25.7, 215.0], [25.8, 215.0], [25.9, 215.0], [26.0, 215.0], [26.1, 215.0], [26.2, 228.0], [26.3, 228.0], [26.4, 228.0], [26.5, 228.0], [26.6, 228.0], [26.7, 228.0], [26.8, 228.0], [26.9, 229.0], [27.0, 229.0], [27.1, 229.0], [27.2, 229.0], [27.3, 229.0], [27.4, 229.0], [27.5, 229.0], [27.6, 229.0], [27.7, 229.0], [27.8, 229.0], [27.9, 229.0], [28.0, 229.0], [28.1, 229.0], [28.2, 229.0], [28.3, 229.0], [28.4, 229.0], [28.5, 230.0], [28.6, 230.0], [28.7, 230.0], [28.8, 230.0], [28.9, 230.0], [29.0, 230.0], [29.1, 230.0], [29.2, 230.0], [29.3, 230.0], [29.4, 230.0], [29.5, 231.0], [29.6, 231.0], [29.7, 233.0], [29.8, 233.0], [29.9, 241.0], [30.0, 241.0], [30.1, 242.0], [30.2, 242.0], [30.3, 242.0], [30.4, 242.0], [30.5, 242.0], [30.6, 242.0], [30.7, 242.0], [30.8, 242.0], [30.9, 243.0], [31.0, 243.0], [31.1, 243.0], [31.2, 244.0], [31.3, 244.0], [31.4, 245.0], [31.5, 245.0], [31.6, 246.0], [31.7, 248.0], [31.8, 248.0], [31.9, 249.0], [32.0, 249.0], [32.1, 257.0], [32.2, 258.0], [32.3, 258.0], [32.4, 258.0], [32.5, 258.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 260.0], [33.0, 260.0], [33.1, 260.0], [33.2, 260.0], [33.3, 260.0], [33.4, 260.0], [33.5, 260.0], [33.6, 275.0], [33.7, 275.0], [33.8, 275.0], [33.9, 276.0], [34.0, 276.0], [34.1, 276.0], [34.2, 276.0], [34.3, 276.0], [34.4, 276.0], [34.5, 276.0], [34.6, 276.0], [34.7, 276.0], [34.8, 276.0], [34.9, 309.0], [35.0, 309.0], [35.1, 309.0], [35.2, 322.0], [35.3, 322.0], [35.4, 323.0], [35.5, 323.0], [35.6, 323.0], [35.7, 338.0], [35.8, 338.0], [35.9, 339.0], [36.0, 339.0], [36.1, 339.0], [36.2, 339.0], [36.3, 339.0], [36.4, 339.0], [36.5, 339.0], [36.6, 347.0], [36.7, 347.0], [36.8, 347.0], [36.9, 348.0], [37.0, 348.0], [37.1, 348.0], [37.2, 348.0], [37.3, 348.0], [37.4, 356.0], [37.5, 356.0], [37.6, 357.0], [37.7, 357.0], [37.8, 357.0], [37.9, 357.0], [38.0, 357.0], [38.1, 366.0], [38.2, 366.0], [38.3, 366.0], [38.4, 366.0], [38.5, 366.0], [38.6, 367.0], [38.7, 369.0], [38.8, 369.0], [38.9, 370.0], [39.0, 370.0], [39.1, 370.0], [39.2, 370.0], [39.3, 370.0], [39.4, 377.0], [39.5, 378.0], [39.6, 378.0], [39.7, 378.0], [39.8, 378.0], [39.9, 387.0], [40.0, 387.0], [40.1, 387.0], [40.2, 388.0], [40.3, 388.0], [40.4, 388.0], [40.5, 388.0], [40.6, 388.0], [40.7, 391.0], [40.8, 391.0], [40.9, 394.0], [41.0, 395.0], [41.1, 395.0], [41.2, 395.0], [41.3, 395.0], [41.4, 395.0], [41.5, 396.0], [41.6, 396.0], [41.7, 397.0], [41.8, 397.0], [41.9, 398.0], [42.0, 398.0], [42.1, 398.0], [42.2, 399.0], [42.3, 399.0], [42.4, 399.0], [42.5, 400.0], [42.6, 400.0], [42.7, 400.0], [42.8, 400.0], [42.9, 400.0], [43.0, 403.0], [43.1, 403.0], [43.2, 403.0], [43.3, 403.0], [43.4, 412.0], [43.5, 412.0], [43.6, 412.0], [43.7, 413.0], [43.8, 413.0], [43.9, 415.0], [44.0, 416.0], [44.1, 416.0], [44.2, 416.0], [44.3, 416.0], [44.4, 423.0], [44.5, 423.0], [44.6, 423.0], [44.7, 423.0], [44.8, 423.0], [44.9, 424.0], [45.0, 424.0], [45.1, 424.0], [45.2, 424.0], [45.3, 424.0], [45.4, 425.0], [45.5, 425.0], [45.6, 425.0], [45.7, 425.0], [45.8, 425.0], [45.9, 425.0], [46.0, 425.0], [46.1, 425.0], [46.2, 436.0], [46.3, 436.0], [46.4, 453.0], [46.5, 453.0], [46.6, 453.0], [46.7, 454.0], [46.8, 454.0], [46.9, 455.0], [47.0, 458.0], [47.1, 458.0], [47.2, 466.0], [47.3, 466.0], [47.4, 466.0], [47.5, 471.0], [47.6, 471.0], [47.7, 471.0], [47.8, 471.0], [47.9, 484.0], [48.0, 491.0], [48.1, 491.0], [48.2, 492.0], [48.3, 492.0], [48.4, 510.0], [48.5, 510.0], [48.6, 510.0], [48.7, 513.0], [48.8, 513.0], [48.9, 514.0], [49.0, 514.0], [49.1, 514.0], [49.2, 514.0], [49.3, 514.0], [49.4, 514.0], [49.5, 531.0], [49.6, 531.0], [49.7, 537.0], [49.8, 537.0], [49.9, 538.0], [50.0, 538.0], [50.1, 538.0], [50.2, 538.0], [50.3, 538.0], [50.4, 539.0], [50.5, 539.0], [50.6, 539.0], [50.7, 539.0], [50.8, 539.0], [50.9, 539.0], [51.0, 539.0], [51.1, 539.0], [51.2, 539.0], [51.3, 539.0], [51.4, 542.0], [51.5, 542.0], [51.6, 542.0], [51.7, 542.0], [51.8, 542.0], [51.9, 542.0], [52.0, 542.0], [52.1, 542.0], [52.2, 542.0], [52.3, 542.0], [52.4, 543.0], [52.5, 546.0], [52.6, 546.0], [52.7, 551.0], [52.8, 551.0], [52.9, 558.0], [53.0, 558.0], [53.1, 558.0], [53.2, 558.0], [53.3, 558.0], [53.4, 560.0], [53.5, 561.0], [53.6, 561.0], [53.7, 564.0], [53.8, 564.0], [53.9, 564.0], [54.0, 564.0], [54.1, 564.0], [54.2, 576.0], [54.3, 576.0], [54.4, 579.0], [54.5, 579.0], [54.6, 579.0], [54.7, 579.0], [54.8, 579.0], [54.9, 582.0], [55.0, 583.0], [55.1, 583.0], [55.2, 587.0], [55.3, 587.0], [55.4, 587.0], [55.5, 588.0], [55.6, 588.0], [55.7, 588.0], [55.8, 588.0], [55.9, 588.0], [56.0, 589.0], [56.1, 589.0], [56.2, 590.0], [56.3, 590.0], [56.4, 590.0], [56.5, 590.0], [56.6, 590.0], [56.7, 590.0], [56.8, 590.0], [56.9, 590.0], [57.0, 590.0], [57.1, 590.0], [57.2, 590.0], [57.3, 590.0], [57.4, 593.0], [57.5, 593.0], [57.6, 593.0], [57.7, 594.0], [57.8, 594.0], [57.9, 594.0], [58.0, 594.0], [58.1, 594.0], [58.2, 594.0], [58.3, 594.0], [58.4, 594.0], [58.5, 595.0], [58.6, 595.0], [58.7, 595.0], [58.8, 595.0], [58.9, 596.0], [59.0, 596.0], [59.1, 596.0], [59.2, 596.0], [59.3, 596.0], [59.4, 600.0], [59.5, 600.0], [59.6, 600.0], [59.7, 600.0], [59.8, 600.0], [59.9, 601.0], [60.0, 601.0], [60.1, 601.0], [60.2, 601.0], [60.3, 601.0], [60.4, 602.0], [60.5, 602.0], [60.6, 602.0], [60.7, 603.0], [60.8, 603.0], [60.9, 606.0], [61.0, 606.0], [61.1, 606.0], [61.2, 606.0], [61.3, 606.0], [61.4, 606.0], [61.5, 606.0], [61.6, 606.0], [61.7, 607.0], [61.8, 607.0], [61.9, 607.0], [62.0, 607.0], [62.1, 607.0], [62.2, 607.0], [62.3, 607.0], [62.4, 607.0], [62.5, 607.0], [62.6, 607.0], [62.7, 607.0], [62.8, 607.0], [62.9, 609.0], [63.0, 609.0], [63.1, 609.0], [63.2, 609.0], [63.3, 609.0], [63.4, 609.0], [63.5, 609.0], [63.6, 609.0], [63.7, 609.0], [63.8, 609.0], [63.9, 613.0], [64.0, 614.0], [64.1, 614.0], [64.2, 614.0], [64.3, 614.0], [64.4, 617.0], [64.5, 617.0], [64.6, 617.0], [64.7, 617.0], [64.8, 617.0], [64.9, 617.0], [65.0, 617.0], [65.1, 617.0], [65.2, 617.0], [65.3, 617.0], [65.4, 617.0], [65.5, 617.0], [65.6, 617.0], [65.7, 617.0], [65.8, 617.0], [65.9, 617.0], [66.0, 617.0], [66.1, 617.0], [66.2, 617.0], [66.3, 617.0], [66.4, 618.0], [66.5, 621.0], [66.6, 621.0], [66.7, 622.0], [66.8, 622.0], [66.9, 623.0], [67.0, 623.0], [67.1, 623.0], [67.2, 625.0], [67.3, 625.0], [67.4, 625.0], [67.5, 626.0], [67.6, 626.0], [67.7, 626.0], [67.8, 626.0], [67.9, 626.0], [68.0, 627.0], [68.1, 627.0], [68.2, 627.0], [68.3, 627.0], [68.4, 627.0], [68.5, 627.0], [68.6, 627.0], [68.7, 627.0], [68.8, 627.0], [68.9, 627.0], [69.0, 628.0], [69.1, 628.0], [69.2, 628.0], [69.3, 628.0], [69.4, 628.0], [69.5, 628.0], [69.6, 628.0], [69.7, 628.0], [69.8, 628.0], [69.9, 628.0], [70.0, 631.0], [70.1, 631.0], [70.2, 631.0], [70.3, 631.0], [70.4, 632.0], [70.5, 632.0], [70.6, 632.0], [70.7, 632.0], [70.8, 632.0], [70.9, 632.0], [71.0, 632.0], [71.1, 632.0], [71.2, 632.0], [71.3, 632.0], [71.4, 635.0], [71.5, 636.0], [71.6, 636.0], [71.7, 636.0], [71.8, 636.0], [71.9, 636.0], [72.0, 638.0], [72.1, 638.0], [72.2, 639.0], [72.3, 639.0], [72.4, 639.0], [72.5, 640.0], [72.6, 640.0], [72.7, 640.0], [72.8, 640.0], [72.9, 640.0], [73.0, 641.0], [73.1, 641.0], [73.2, 642.0], [73.3, 642.0], [73.4, 642.0], [73.5, 643.0], [73.6, 643.0], [73.7, 643.0], [73.8, 643.0], [73.9, 644.0], [74.0, 644.0], [74.1, 644.0], [74.2, 644.0], [74.3, 644.0], [74.4, 645.0], [74.5, 645.0], [74.6, 645.0], [74.7, 646.0], [74.8, 646.0], [74.9, 646.0], [75.0, 646.0], [75.1, 646.0], [75.2, 646.0], [75.3, 646.0], [75.4, 646.0], [75.5, 646.0], [75.6, 646.0], [75.7, 646.0], [75.8, 646.0], [75.9, 646.0], [76.0, 647.0], [76.1, 647.0], [76.2, 648.0], [76.3, 648.0], [76.4, 648.0], [76.5, 651.0], [76.6, 651.0], [76.7, 651.0], [76.8, 651.0], [76.9, 652.0], [77.0, 652.0], [77.1, 652.0], [77.2, 656.0], [77.3, 656.0], [77.4, 656.0], [77.5, 656.0], [77.6, 656.0], [77.7, 656.0], [77.8, 656.0], [77.9, 656.0], [78.0, 656.0], [78.1, 656.0], [78.2, 659.0], [78.3, 659.0], [78.4, 677.0], [78.5, 679.0], [78.6, 679.0], [78.7, 679.0], [78.8, 679.0], [78.9, 680.0], [79.0, 707.0], [79.1, 707.0], [79.2, 708.0], [79.3, 708.0], [79.4, 708.0], [79.5, 708.0], [79.6, 708.0], [79.7, 708.0], [79.8, 708.0], [79.9, 708.0], [80.0, 708.0], [80.1, 708.0], [80.2, 709.0], [80.3, 709.0], [80.4, 719.0], [80.5, 719.0], [80.6, 719.0], [80.7, 719.0], [80.8, 719.0], [80.9, 723.0], [81.0, 723.0], [81.1, 723.0], [81.2, 723.0], [81.3, 723.0], [81.4, 723.0], [81.5, 723.0], [81.6, 723.0], [81.7, 724.0], [81.8, 724.0], [81.9, 724.0], [82.0, 736.0], [82.1, 736.0], [82.2, 804.0], [82.3, 804.0], [82.4, 844.0], [82.5, 844.0], [82.6, 844.0], [82.7, 901.0], [82.8, 901.0], [82.9, 901.0], [83.0, 901.0], [83.1, 901.0], [83.2, 904.0], [83.3, 904.0], [83.4, 934.0], [83.5, 935.0], [83.6, 935.0], [83.7, 935.0], [83.8, 935.0], [83.9, 935.0], [84.0, 935.0], [84.1, 935.0], [84.2, 935.0], [84.3, 935.0], [84.4, 935.0], [84.5, 935.0], [84.6, 935.0], [84.7, 935.0], [84.8, 935.0], [84.9, 935.0], [85.0, 935.0], [85.1, 935.0], [85.2, 935.0], [85.3, 935.0], [85.4, 935.0], [85.5, 936.0], [85.6, 936.0], [85.7, 936.0], [85.8, 936.0], [85.9, 936.0], [86.0, 936.0], [86.1, 936.0], [86.2, 936.0], [86.3, 936.0], [86.4, 937.0], [86.5, 937.0], [86.6, 937.0], [86.7, 937.0], [86.8, 937.0], [86.9, 937.0], [87.0, 937.0], [87.1, 937.0], [87.2, 937.0], [87.3, 937.0], [87.4, 937.0], [87.5, 937.0], [87.6, 937.0], [87.7, 937.0], [87.8, 937.0], [87.9, 942.0], [88.0, 942.0], [88.1, 942.0], [88.2, 942.0], [88.3, 942.0], [88.4, 950.0], [88.5, 950.0], [88.6, 950.0], [88.7, 950.0], [88.8, 950.0], [88.9, 950.0], [89.0, 950.0], [89.1, 950.0], [89.2, 950.0], [89.3, 950.0], [89.4, 950.0], [89.5, 950.0], [89.6, 950.0], [89.7, 950.0], [89.8, 950.0], [89.9, 950.0], [90.0, 950.0], [90.1, 950.0], [90.2, 952.0], [90.3, 952.0], [90.4, 954.0], [90.5, 964.0], [90.6, 964.0], [90.7, 964.0], [90.8, 964.0], [90.9, 970.0], [91.0, 970.0], [91.1, 970.0], [91.2, 970.0], [91.3, 970.0], [91.4, 973.0], [91.5, 974.0], [91.6, 974.0], [91.7, 974.0], [91.8, 974.0], [91.9, 974.0], [92.0, 978.0], [92.1, 978.0], [92.2, 978.0], [92.3, 978.0], [92.4, 978.0], [92.5, 978.0], [92.6, 978.0], [92.7, 978.0], [92.8, 978.0], [92.9, 979.0], [93.0, 982.0], [93.1, 982.0], [93.2, 982.0], [93.3, 982.0], [93.4, 983.0], [93.5, 992.0], [93.6, 992.0], [93.7, 1043.0], [93.8, 1043.0], [93.9, 1051.0], [94.0, 1070.0], [94.1, 1070.0], [94.2, 1076.0], [94.3, 1076.0], [94.4, 1090.0], [94.5, 1090.0], [94.6, 1090.0], [94.7, 1102.0], [94.8, 1102.0], [94.9, 1105.0], [95.0, 1105.0], [95.1, 1105.0], [95.2, 1106.0], [95.3, 1106.0], [95.4, 1107.0], [95.5, 1107.0], [95.6, 1107.0], [95.7, 1120.0], [95.8, 1120.0], [95.9, 1131.0], [96.0, 1138.0], [96.1, 1138.0], [96.2, 1146.0], [96.3, 1146.0], [96.4, 1179.0], [96.5, 1179.0], [96.6, 1182.0], [96.7, 1183.0], [96.8, 1183.0], [96.9, 1183.0], [97.0, 1183.0], [97.1, 1183.0], [97.2, 1183.0], [97.3, 1183.0], [97.4, 1183.0], [97.5, 1183.0], [97.6, 1184.0], [97.7, 1184.0], [97.8, 1184.0], [97.9, 1184.0], [98.0, 1184.0], [98.1, 1209.0], [98.2, 1209.0], [98.3, 1209.0], [98.4, 1211.0], [98.5, 1211.0], [98.6, 1211.0], [98.7, 1239.0], [98.8, 1239.0], [98.9, 1272.0], [99.0, 1272.0], [99.1, 1374.0], [99.2, 1378.0], [99.3, 1378.0], [99.4, 1420.0], [99.5, 1420.0], [99.6, 1451.0], [99.7, 1452.0], [99.8, 1452.0], [99.9, 1534.0], [100.0, 1534.0]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 147.0, "series": [{"data": [[600.0, 34.0], [700.0, 32.0], [800.0, 99.0], [900.0, 7.0], [1000.0, 35.0], [1100.0, 30.0], [1200.0, 41.0], [1300.0, 3.0], [1400.0, 10.0], [1500.0, 5.0], [1600.0, 6.0], [1700.0, 15.0], [1800.0, 6.0], [1900.0, 8.0], [2000.0, 6.0], [2100.0, 13.0], [2200.0, 9.0], [2300.0, 18.0], [2400.0, 14.0], [2500.0, 15.0], [2600.0, 8.0], [2700.0, 14.0], [2800.0, 19.0], [2900.0, 28.0], [3000.0, 9.0], [3100.0, 7.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 3.0], [3600.0, 2.0], [4000.0, 1.0], [4200.0, 3.0], [4300.0, 4.0], [4400.0, 8.0], [4600.0, 1.0], [4800.0, 1.0], [4900.0, 2.0], [400.0, 59.0], [500.0, 23.0]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[0.0, 16.0], [600.0, 22.0], [700.0, 32.0], [800.0, 32.0], [900.0, 32.0], [1000.0, 24.0], [1100.0, 32.0], [1200.0, 46.0], [1300.0, 52.0], [1400.0, 1.0], [1500.0, 13.0], [100.0, 15.0], [1800.0, 4.0], [1900.0, 40.0], [2000.0, 39.0], [2100.0, 11.0], [2200.0, 14.0], [2300.0, 1.0], [2400.0, 10.0], [2500.0, 28.0], [2600.0, 16.0], [2700.0, 12.0], [3000.0, 5.0], [3100.0, 6.0], [200.0, 22.0], [3200.0, 11.0], [3300.0, 12.0], [300.0, 16.0], [400.0, 26.0], [500.0, 10.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[600.0, 118.0], [700.0, 19.0], [200.0, 147.0], [800.0, 3.0], [900.0, 66.0], [1000.0, 6.0], [1100.0, 20.0], [300.0, 46.0], [1200.0, 6.0], [1300.0, 2.0], [1400.0, 3.0], [1500.0, 1.0], [400.0, 35.0], [100.0, 62.0], [500.0, 66.0]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 444.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 906.0, "series": [{"data": [[0.0, 444.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 906.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 450.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 357.72611111111183, "minX": 1.6212693E12, "maxY": 357.72611111111183, "series": [{"data": [[1.6212693E12, 357.72611111111183]], "isOverall": false, "label": "mto-restful Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212693E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 46.333333333333336, "minX": 1.0, "maxY": 4914.0, "series": [{"data": [[6.0, 3054.0], [13.0, 2856.2], [14.0, 2644.0], [20.0, 4914.0], [23.0, 3754.4], [30.0, 3281.0], [35.0, 2903.0], [43.0, 2986.5], [45.0, 2956.6], [52.0, 2939.0], [54.0, 2912.0], [56.0, 3372.0], [59.0, 2493.0], [61.0, 2907.0], [62.0, 2633.3333333333335], [71.0, 2969.0], [73.0, 4119.111111111112], [79.0, 2454.0], [78.0, 2635.0], [83.0, 2519.4], [84.0, 3999.6], [90.0, 3002.0], [89.0, 3071.8], [93.0, 2619.875], [92.0, 2485.0], [99.0, 3049.0], [103.0, 2873.0], [101.0, 2291.0], [107.0, 2512.5], [105.0, 2888.5], [104.0, 2522.0], [117.0, 2990.0], [122.0, 1750.0], [126.0, 1877.0], [135.0, 2632.0], [134.0, 3070.0], [142.0, 2105.2222222222226], [138.0, 1450.5], [150.0, 1779.0], [156.0, 2974.0], [155.0, 3381.0], [153.0, 2949.0], [152.0, 3102.0], [163.0, 2432.0], [161.0, 2981.0], [174.0, 2547.923076923077], [173.0, 2395.0], [182.0, 1922.5], [179.0, 2991.75], [178.0, 2927.0], [187.0, 3406.3333333333335], [193.0, 1871.0], [207.0, 1803.0], [206.0, 2716.0], [201.0, 2171.6666666666665], [210.0, 2408.75], [221.0, 1706.5], [220.0, 3632.0], [217.0, 3153.0], [239.0, 1007.9999999999999], [245.0, 2951.0], [242.0, 627.0], [241.0, 669.6666666666666], [240.0, 661.5], [251.0, 582.3333333333334], [250.0, 1911.0555555555557], [249.0, 1553.5], [268.0, 1022.25], [267.0, 1123.5], [265.0, 630.0], [264.0, 667.0], [263.0, 661.0], [261.0, 647.0], [256.0, 2786.0], [284.0, 1163.0000000000002], [283.0, 871.0], [282.0, 878.875], [275.0, 665.0], [273.0, 659.0], [294.0, 2060.0], [293.0, 2056.0], [292.0, 2216.0], [291.0, 2155.0], [288.0, 1529.0], [319.0, 758.0], [316.0, 759.0], [313.0, 784.0], [333.0, 400.0], [329.0, 829.0], [328.0, 848.5], [340.0, 415.0], [336.0, 825.0], [364.0, 460.0], [379.0, 490.0], [377.0, 740.0], [376.0, 766.0], [375.0, 761.0], [374.0, 757.0], [373.0, 752.0], [368.0, 1626.5], [392.0, 492.92857142857144], [393.0, 2499.0], [389.0, 850.0], [386.0, 860.0], [385.0, 888.6], [384.0, 1755.0], [408.0, 600.75], [423.0, 417.0], [447.0, 442.9166666666667], [442.0, 799.0], [441.0, 966.75], [439.0, 829.6], [438.0, 2135.0], [436.0, 2185.0], [435.0, 2214.571428571429], [460.0, 442.0], [463.0, 1204.3333333333333], [462.0, 1208.5737704918029], [461.0, 1101.5], [458.0, 987.0], [468.0, 449.25], [469.0, 458.3333333333333], [470.0, 473.75], [472.0, 488.0], [495.0, 1745.0], [489.0, 1210.5], [488.0, 1467.0454545454545], [508.0, 434.0], [507.0, 1145.0], [506.0, 1190.875], [504.0, 1217.0], [501.0, 1762.0], [498.0, 1736.0], [537.0, 864.625], [536.0, 833.0000000000001], [535.0, 588.3684210526316], [533.0, 612.0], [531.0, 631.5], [529.0, 1196.8333333333335], [526.0, 1237.5], [522.0, 1257.5], [516.0, 1162.6666666666667], [515.0, 1156.0], [566.0, 552.0], [571.0, 848.0], [568.0, 864.2], [556.0, 896.0714285714286], [549.0, 879.5], [544.0, 820.0], [585.0, 844.0], [582.0, 837.5], [579.0, 842.5]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[336.02833333333297, 1541.070000000001]], "isOverall": false, "label": "Get booking-Aggregated", "isController": false}, {"data": [[130.0, 62.333333333333336], [131.0, 46.333333333333336], [136.0, 56.0], [138.0, 87.0], [140.0, 63.0], [142.0, 77.0], [143.0, 72.0], [145.0, 92.0], [148.0, 99.0], [150.0, 82.0], [151.0, 86.0], [152.0, 109.0], [154.0, 102.0], [156.0, 107.0], [158.0, 116.0], [159.0, 117.0], [160.0, 105.0], [163.0, 97.0], [164.0, 113.0], [168.0, 123.0], [170.0, 124.0], [172.0, 129.0], [174.0, 141.0], [176.0, 156.0], [178.0, 162.0], [180.0, 160.0], [212.0, 213.5], [215.0, 240.5], [217.0, 239.0], [220.0, 247.0], [222.0, 235.0], [223.0, 255.0], [225.0, 243.0], [228.0, 243.0], [230.0, 275.5], [234.0, 279.0], [235.0, 258.0], [237.0, 274.0], [238.0, 284.0], [240.0, 268.0], [242.0, 281.0], [243.0, 290.0], [246.0, 289.0], [247.0, 309.0], [250.0, 303.0], [252.0, 306.0], [255.0, 293.0], [257.0, 325.0], [259.0, 301.0], [260.0, 301.0], [262.0, 306.0], [263.0, 313.5], [266.0, 315.0], [284.0, 3321.285714285714], [283.0, 3307.6666666666665], [298.0, 406.0], [299.0, 379.0], [300.0, 377.0], [302.0, 383.0], [292.0, 3180.0], [290.0, 3009.25], [288.0, 3074.2727272727275], [305.0, 2422.2], [304.0, 419.0], [307.0, 417.0], [316.0, 395.0], [318.0, 430.0], [308.0, 396.0], [309.0, 421.0], [310.0, 423.0], [312.0, 403.0], [314.0, 406.0], [315.0, 440.0], [333.0, 478.0], [321.0, 443.0], [320.0, 420.0], [323.0, 430.0], [332.0, 2658.0], [326.0, 434.0], [327.0, 455.0], [330.0, 471.0], [331.0, 473.0], [334.0, 451.0], [329.0, 2662.0], [328.0, 2757.9999999999995], [337.0, 455.0], [336.0, 457.0], [338.0, 487.0], [339.0, 460.0], [342.0, 448.0], [345.0, 492.0], [349.0, 478.0], [351.0, 489.0], [343.0, 2646.0], [360.0, 2531.384615384615], [357.0, 2535.2857142857147], [385.0, 2322.9285714285716], [388.0, 564.0], [391.0, 563.0], [392.0, 570.5], [399.0, 578.0], [386.0, 2439.272727272727], [412.0, 637.0], [400.0, 587.0], [401.0, 605.0], [404.0, 616.0], [405.0, 597.0], [407.0, 616.0], [408.0, 600.0], [410.0, 629.0], [414.0, 616.5], [415.0, 621.0], [428.0, 613.0], [418.0, 598.0], [419.0, 628.0], [420.0, 640.0], [422.0, 628.0], [417.0, 2383.25], [425.0, 630.0], [426.0, 611.0], [427.0, 613.0], [430.0, 616.0], [431.0, 2229.090909090909], [432.0, 618.0], [434.0, 620.0], [435.0, 1980.5714285714284], [437.0, 621.0], [436.0, 2085.0], [463.0, 1955.2222222222222], [462.0, 2040.5217391304345], [461.0, 2088.0909090909095], [458.0, 1985.3333333333333], [471.0, 711.0], [473.0, 717.0], [476.0, 719.0], [487.0, 713.0], [488.0, 717.0], [491.0, 725.0], [494.0, 732.0], [496.0, 733.0], [499.0, 735.0], [501.0, 738.0], [502.0, 738.0], [503.0, 740.0], [505.0, 741.0], [506.0, 1557.8333333333333], [507.0, 741.5], [508.0, 743.0], [511.0, 745.0], [513.0, 746.0], [512.0, 746.0], [514.0, 747.0], [515.0, 747.0], [516.0, 746.0], [537.0, 1151.75], [536.0, 1158.125], [528.0, 753.0], [529.0, 1307.611764705883], [531.0, 1260.454545454545], [535.0, 1165.75], [533.0, 1258.0], [521.0, 748.5], [522.0, 751.0], [525.0, 751.0], [526.0, 752.0], [570.0, 843.5], [572.0, 842.0], [573.0, 844.0], [575.0, 846.5], [556.0, 1068.3157894736842], [549.0, 1082.8], [589.0, 936.5333333333333], [578.0, 847.0], [577.0, 848.0], [591.0, 851.0], [580.0, 847.0], [582.0, 849.0], [583.0, 851.0], [593.0, 859.0000000000001], [585.0, 851.0], [586.0, 851.0], [587.0, 852.0], [588.0, 950.0526315789473]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[436.14666666666653, 1405.7183333333332]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[3.0, 215.0], [6.0, 183.0], [7.0, 183.0], [8.0, 200.0], [13.0, 200.6], [14.0, 184.0], [16.0, 213.0], [20.0, 242.25], [22.0, 212.0], [23.0, 212.0], [24.0, 197.0], [28.0, 198.0], [30.0, 197.0], [35.0, 197.0], [36.0, 199.0], [43.0, 185.0], [42.0, 213.16666666666666], [45.0, 199.0], [44.0, 185.0], [49.0, 200.0], [50.0, 213.0], [52.0, 214.0], [54.0, 200.0], [56.0, 200.0], [59.0, 185.0], [61.0, 215.0], [60.0, 215.0], [62.0, 215.0], [67.0, 229.0], [71.0, 228.0], [69.0, 241.5], [73.0, 198.0], [78.0, 198.2], [83.0, 214.0], [81.0, 215.0], [84.0, 184.0], [90.0, 201.0], [89.0, 200.0], [93.0, 214.0], [99.0, 203.33333333333334], [98.0, 182.0], [97.0, 182.0], [96.0, 183.0], [102.0, 196.0], [101.0, 183.0], [100.0, 198.0], [107.0, 1185.0], [105.0, 229.66666666666666], [111.0, 199.0], [110.0, 199.0], [115.0, 374.3333333333333], [119.0, 200.0], [116.0, 200.0], [123.0, 200.0], [122.0, 499.3333333333333], [126.0, 527.3333333333334], [135.0, 213.0], [134.0, 213.5], [132.0, 199.0], [130.0, 692.0], [142.0, 250.0], [138.0, 237.66666666666666], [150.0, 213.0], [147.0, 214.0], [146.0, 214.0], [144.0, 213.0], [157.0, 199.0], [156.0, 1120.0], [155.0, 199.0], [153.0, 224.0], [165.0, 1105.0], [163.0, 197.0], [160.0, 199.0], [174.0, 198.0], [173.0, 202.33333333333334], [170.0, 196.5], [168.0, 1074.3333333333333], [182.0, 213.0], [179.0, 213.0], [178.0, 213.0], [190.0, 518.0], [187.0, 215.0], [198.0, 1160.5], [194.0, 1171.0], [207.0, 1076.0], [206.0, 197.6], [201.0, 1178.6], [213.0, 214.0], [210.0, 214.5], [208.0, 1106.0], [221.0, 234.0], [217.0, 249.83333333333334], [231.0, 309.0], [229.0, 275.75], [239.0, 415.6666666666667], [238.0, 369.5], [237.0, 370.0], [234.0, 370.0], [233.0, 322.0], [232.0, 248.0], [247.0, 388.0], [245.0, 357.0], [242.0, 356.0], [241.0, 403.0], [240.0, 403.0], [251.0, 1051.0], [250.0, 1102.0], [249.0, 387.5], [269.0, 1272.0], [268.0, 377.0], [267.0, 399.0], [265.0, 398.0], [264.0, 400.0], [263.0, 400.0], [261.0, 344.3333333333333], [258.0, 447.6666666666667], [257.0, 309.0], [284.0, 546.0], [283.0, 579.0], [282.0, 579.0], [280.0, 1179.0], [279.0, 389.25], [275.0, 347.6], [272.0, 1209.0], [302.0, 424.0], [297.0, 394.6666666666667], [294.0, 395.0], [293.0, 396.0], [292.0, 397.0], [291.0, 398.0], [290.0, 899.5], [288.0, 1425.25], [313.0, 448.0], [309.0, 425.0], [307.0, 425.0], [305.0, 436.99999999999994], [333.0, 537.0], [332.0, 538.3333333333334], [328.0, 609.0], [325.0, 602.6], [320.0, 581.1428571428571], [347.0, 632.25], [343.0, 618.8749999999999], [336.0, 576.0], [366.0, 539.0], [365.0, 507.3333333333333], [364.0, 484.0], [360.0, 514.0], [357.0, 560.0], [356.0, 1047.5], [354.0, 590.0], [382.0, 538.0], [377.0, 514.0], [376.0, 542.0], [375.0, 542.0], [374.0, 542.0], [373.0, 542.0], [370.0, 466.0], [368.0, 539.0], [399.0, 631.0], [398.0, 594.0], [394.0, 602.5], [389.0, 587.5], [388.0, 589.0], [386.0, 601.0], [385.0, 648.0], [384.0, 573.0], [415.0, 646.0], [408.0, 646.0], [404.0, 633.8571428571428], [401.0, 602.0], [400.0, 616.5], [431.0, 646.0], [429.0, 647.0], [428.0, 677.0], [427.0, 723.0], [426.0, 712.3749999999999], [422.0, 679.0], [417.0, 708.1428571428572], [416.0, 707.0], [447.0, 231.0], [444.0, 596.0], [442.0, 583.0], [441.0, 613.5], [439.0, 600.0], [436.0, 614.0], [435.0, 642.5], [460.0, 242.0], [463.0, 904.0], [462.0, 804.0], [461.0, 719.0], [458.0, 653.090909090909], [457.0, 626.0], [456.0, 627.0], [478.0, 950.0], [470.0, 774.75], [479.0, 968.6666666666666], [476.0, 950.0], [475.0, 950.0], [472.0, 844.0], [469.0, 950.0], [467.0, 950.0], [464.0, 844.0], [488.0, 825.0], [491.0, 233.0], [495.0, 914.8], [484.0, 978.2], [511.0, 935.6], [506.0, 982.0], [505.0, 982.0], [504.0, 934.0], [503.0, 935.0], [501.0, 935.2857142857142], [498.0, 935.0], [537.0, 622.0], [536.0, 538.0], [515.0, 936.75], [535.0, 366.0], [533.0, 378.0], [531.0, 391.0], [530.0, 436.0], [529.0, 942.0], [526.0, 954.0], [525.0, 970.0], [522.0, 945.7142857142858], [568.0, 606.0], [572.0, 645.0], [574.0, 617.0], [571.0, 645.0], [567.0, 606.75], [563.0, 607.0], [559.0, 606.0], [548.0, 617.0], [544.0, 617.3333333333334], [551.0, 639.0], [549.0, 617.0], [556.0, 639.5], [553.0, 641.0], [589.0, 494.5], [593.0, 458.0], [592.0, 510.0], [590.0, 531.0], [588.0, 623.0], [587.0, 624.0], [585.0, 651.5], [582.0, 626.5], [579.0, 647.75], [1.0, 201.0]], "isOverall": false, "label": "Create booking", "isController": false}, {"data": [[300.99833333333356, 520.3750000000007]], "isOverall": false, "label": "Create booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 593.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9850.0, "minX": 1.6212693E12, "maxY": 57835.916666666664, "series": [{"data": [[1.6212693E12, 57835.916666666664]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6212693E12, 9850.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212693E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 520.3750000000007, "minX": 1.6212693E12, "maxY": 1541.070000000001, "series": [{"data": [[1.6212693E12, 1541.070000000001]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[1.6212693E12, 1405.7183333333332]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.6212693E12, 520.3750000000007]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212693E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 520.3616666666663, "minX": 1.6212693E12, "maxY": 1405.668333333332, "series": [{"data": [[1.6212693E12, 1237.2299999999996]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[1.6212693E12, 1405.668333333332]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.6212693E12, 520.3616666666663]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212693E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6212693E12, "maxY": 304.2383333333335, "series": [{"data": [[1.6212693E12, 285.4099999999999]], "isOverall": false, "label": "Get booking", "isController": false}, {"data": [[1.6212693E12, 304.2383333333335]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.6212693E12, 0.0]], "isOverall": false, "label": "Create booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212693E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.6212693E12, "maxY": 4932.0, "series": [{"data": [[1.6212693E12, 4932.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6212693E12, 2587.000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6212693E12, 4273.74]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6212693E12, 2950.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6212693E12, 34.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6212693E12, 871.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212693E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 215.0, "minX": 107.0, "maxY": 1426.0, "series": [{"data": [[256.0, 463.0], [312.0, 948.0], [171.0, 1426.0], [365.0, 1207.0], [372.0, 835.5], [107.0, 215.0], [217.0, 674.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 372.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 215.0, "minX": 107.0, "maxY": 1200.0, "series": [{"data": [[256.0, 463.0], [312.0, 948.0], [171.0, 756.0], [365.0, 1200.0], [372.0, 830.5], [107.0, 215.0], [217.0, 673.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 372.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6212693E12, "maxY": 30.0, "series": [{"data": [[1.6212693E12, 30.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212693E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6212693E12, "maxY": 30.0, "series": [{"data": [[1.6212693E12, 30.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6212693E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6212693E12, "maxY": 10.0, "series": [{"data": [[1.6212693E12, 10.0]], "isOverall": false, "label": "Create booking-success", "isController": false}, {"data": [[1.6212693E12, 10.0]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.6212693E12, 10.0]], "isOverall": false, "label": "Get booking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212693E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6212693E12, "maxY": 30.0, "series": [{"data": [[1.6212693E12, 30.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6212693E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

